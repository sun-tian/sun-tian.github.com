I"D<h1 id="css-定位详解"><a href="https://segmentfault.com/a/1190000018411761">CSS 定位详解</a></h1>

<p>作者： <a href="http://www.ruanyifeng.com/">阮一峰</a></p>

<p>日期： <a href="http://www.ruanyifeng.com/blog/2019/11/">2019年11月19日</a></p>

<p>CSS 有两个最重要的基本属性，前端开发必须掌握：<code class="language-plaintext highlighter-rouge">display</code> 和 <code class="language-plaintext highlighter-rouge">position</code>。</p>

<p><code class="language-plaintext highlighter-rouge">display</code>属性指定网页的布局。两个重要的布局，我已经介绍过了：<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html">弹性布局<code class="language-plaintext highlighter-rouge">flex</code></a>和<a href="http://www.ruanyifeng.com/blog/2019/03/grid-layout-tutorial.html">网格布局<code class="language-plaintext highlighter-rouge">grid</code></a>。</p>

<p>本文介绍非常有用的<code class="language-plaintext highlighter-rouge">position</code>属性。我希望通过10分钟的阅读，帮助大家轻松掌握网页定位，说清楚浏览器如何计算网页元素的位置，尤其是新引进的<code class="language-plaintext highlighter-rouge">sticky</code>定位。</p>

<h2 id="一position-属性的作用">一、position 属性的作用</h2>

<p><code class="language-plaintext highlighter-rouge">position</code>属性用来指定一个元素在网页上的位置，一共有5种定位方式，即<code class="language-plaintext highlighter-rouge">position</code>属性主要有五个值。</p>

<blockquote>
  <ul>
    <li><code class="language-plaintext highlighter-rouge">static</code></li>
    <li><code class="language-plaintext highlighter-rouge">relative</code></li>
    <li><code class="language-plaintext highlighter-rouge">fixed</code></li>
    <li><code class="language-plaintext highlighter-rouge">absolute</code></li>
    <li><code class="language-plaintext highlighter-rouge">sticky</code></li>
  </ul>
</blockquote>

<p>下面就依次介绍这五个值。最后一个<code class="language-plaintext highlighter-rouge">sticky</code>是2017年浏览器才支持的，本文将重点介绍。</p>

<h2 id="二static-属性值">二、static 属性值</h2>

<p><code class="language-plaintext highlighter-rouge">static</code>是<code class="language-plaintext highlighter-rouge">position</code>属性的默认值。如果省略<code class="language-plaintext highlighter-rouge">position</code>属性，浏览器就认为该元素是<code class="language-plaintext highlighter-rouge">static</code>定位。</p>

<p>这时，浏览器会按照源码的顺序，决定每个元素的位置，这称为”正常的页面流”（normal flow）。每个块级元素占据自己的区块（block），元素与元素之间不产生重叠，这个位置就是元素的默认位置。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111720.jpg" alt="img" /></p>

<p>注意，<code class="language-plaintext highlighter-rouge">static</code>定位所导致的元素位置，是浏览器自主决定的，所以这时<code class="language-plaintext highlighter-rouge">top</code>、<code class="language-plaintext highlighter-rouge">bottom</code>、<code class="language-plaintext highlighter-rouge">left</code>、<code class="language-plaintext highlighter-rouge">right</code>这四个属性无效。</p>

<h2 id="三relativeabsolutefixed">三、relative，absolute，fixed</h2>

<p><code class="language-plaintext highlighter-rouge">relative</code>、<code class="language-plaintext highlighter-rouge">absolute</code>、<code class="language-plaintext highlighter-rouge">fixed</code>这三个属性值有一个共同点，都是相对于某个基点的定位，不同之处仅仅在于基点不同。所以，只要理解了它们的基点是什么，就很容易掌握这三个属性值。</p>

<p>这三种定位都不会对其他元素的位置产生影响，因此元素之间可能产生重叠。</p>

<h3 id="31-relative-属性值">3.1 relative 属性值</h3>

<p><code class="language-plaintext highlighter-rouge">relative</code>表示，相对于默认位置（即<code class="language-plaintext highlighter-rouge">static</code>时的位置）进行偏移，即定位基点是元素的默认位置。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111721.jpg" alt="img" /></p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111722.jpg" alt="img" /></p>

<p>它必须搭配<code class="language-plaintext highlighter-rouge">top</code>、<code class="language-plaintext highlighter-rouge">bottom</code>、<code class="language-plaintext highlighter-rouge">left</code>、<code class="language-plaintext highlighter-rouge">right</code>这四个属性一起使用，用来指定偏移的方向和距离。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111723.jpg" alt="img" /></p>

<blockquote>
  <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">div</span> <span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div>  </div>
</blockquote>

<p>上面代码中，<code class="language-plaintext highlighter-rouge">div</code>元素从默认位置向下偏移<code class="language-plaintext highlighter-rouge">20px</code>（即距离顶部<code class="language-plaintext highlighter-rouge">20px</code>）。</p>

<h3 id="32-absolute-属性值">3.2 absolute 属性值</h3>

<p><code class="language-plaintext highlighter-rouge">absolute</code>表示，相对于上级元素（一般是父元素）进行偏移，即定位基点是父元素。</p>

<p>它有一个重要的限制条件：定位基点（一般是父元素）不能是<code class="language-plaintext highlighter-rouge">static</code>定位，否则定位基点就会变成整个网页的根元素<code class="language-plaintext highlighter-rouge">html</code>。另外，<code class="language-plaintext highlighter-rouge">absolute</code>定位也必须搭配<code class="language-plaintext highlighter-rouge">top</code>、<code class="language-plaintext highlighter-rouge">bottom</code>、<code class="language-plaintext highlighter-rouge">left</code>、<code class="language-plaintext highlighter-rouge">right</code>这四个属性一起使用。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111801.jpg" alt="img" /></p>

<blockquote>
  <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c">/*
    HTML 代码如下
    &lt;div id="father"&gt;
      &lt;div id="son"&gt;&lt;/div&gt;
    &lt;/div&gt;
  */</span>
  
  <span class="nf">#father</span> <span class="p">{</span>
    <span class="py">positon</span><span class="p">:</span> <span class="nb">relative</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nf">#son</span> <span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">absolute</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div>  </div>
</blockquote>

<p>上面代码中，父元素是<code class="language-plaintext highlighter-rouge">relative</code>定位，子元素是<code class="language-plaintext highlighter-rouge">absolute</code>定位，所以子元素的定位基点是父元素，相对于父元素的顶部向下偏移<code class="language-plaintext highlighter-rouge">20px</code>。如果父元素是<code class="language-plaintext highlighter-rouge">static</code>定位，上例的子元素就是距离网页的顶部向下偏移<code class="language-plaintext highlighter-rouge">20px</code>。</p>

<p>注意，<code class="language-plaintext highlighter-rouge">absolute</code>定位的元素会被”正常页面流”忽略，即在”正常页面流”中，该元素所占空间为零，周边元素不受影响。</p>

<h3 id="33-fixed-属性值">3.3 fixed 属性值</h3>

<p><code class="language-plaintext highlighter-rouge">fixed</code>表示，相对于视口（viewport，浏览器窗口）进行偏移，即定位基点是浏览器窗口。这会导致元素的位置不随页面滚动而变化，好像固定在网页上一样。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111802.jpg" alt="img" /></p>

<p>它如果搭配<code class="language-plaintext highlighter-rouge">top</code>、<code class="language-plaintext highlighter-rouge">bottom</code>、<code class="language-plaintext highlighter-rouge">left</code>、<code class="language-plaintext highlighter-rouge">right</code>这四个属性一起使用，表示元素的初始位置是基于视口计算的，否则初始位置就是元素的默认位置。</p>

<blockquote>
  <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">div</span> <span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="nb">fixed</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div>  </div>
</blockquote>

<p>上面代码中，<code class="language-plaintext highlighter-rouge">div</code>元素始终在视口顶部，不随网页滚动而变化。</p>

<h2 id="四sticky-属性值">四、sticky 属性值</h2>

<p><code class="language-plaintext highlighter-rouge">sticky</code>跟前面四个属性值都不一样，它会产生动态效果，很像<code class="language-plaintext highlighter-rouge">relative</code>和<code class="language-plaintext highlighter-rouge">fixed</code>的结合：一些时候是<code class="language-plaintext highlighter-rouge">relative</code>定位（定位基点是自身默认位置），另一些时候自动变成<code class="language-plaintext highlighter-rouge">fixed</code>定位（定位基点是视口）。</p>

<p>因此，它能够形成”动态固定”的效果。比如，网页的搜索工具栏，初始加载时在自己的默认位置（<code class="language-plaintext highlighter-rouge">relative</code>定位）。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111604.jpg" alt="img" /></p>

<p>页面向下滚动时，工具栏变成固定位置，始终停留在页面头部（<code class="language-plaintext highlighter-rouge">fixed</code>定位）。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111605.jpg" alt="img" /></p>

<p>等到页面重新向上滚动回到原位，工具栏也会回到默认位置。</p>

<p><code class="language-plaintext highlighter-rouge">sticky</code>生效的前提是，必须搭配<code class="language-plaintext highlighter-rouge">top</code>、<code class="language-plaintext highlighter-rouge">bottom</code>、<code class="language-plaintext highlighter-rouge">left</code>、<code class="language-plaintext highlighter-rouge">right</code>这四个属性一起使用，不能省略，否则等同于<code class="language-plaintext highlighter-rouge">relative</code>定位，不产生”动态固定”的效果。原因是这四个属性用来定义”偏移距离”，浏览器把它当作<code class="language-plaintext highlighter-rouge">sticky</code>的生效门槛。</p>

<p>它的具体规则是，当页面滚动，父元素开始脱离视口时（即部分不可见），只要与<code class="language-plaintext highlighter-rouge">sticky</code>元素的距离达到生效门槛，<code class="language-plaintext highlighter-rouge">relative</code>定位自动切换为<code class="language-plaintext highlighter-rouge">fixed</code>定位；等到父元素完全脱离视口时（即完全不可见），<code class="language-plaintext highlighter-rouge">fixed</code>定位自动切换回<code class="language-plaintext highlighter-rouge">relative</code>定位。</p>

<p>请看下面的示例代码。（注意，除了已被淘汰的 IE 以外，其他浏览器目前都支持<code class="language-plaintext highlighter-rouge">sticky</code>。但是，Safari 浏览器需要加上浏览器前缀<code class="language-plaintext highlighter-rouge">-webkit-</code>。）</p>

<blockquote>
  <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nf">#toolbar</span> <span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="n">-webkit-sticky</span><span class="p">;</span> <span class="c">/* safari 浏览器 */</span>
    <span class="nl">position</span><span class="p">:</span> <span class="n">sticky</span><span class="p">;</span> <span class="c">/* 其他浏览器 */</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">20px</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div>  </div>
</blockquote>

<p>上面代码中，页面向下滚动时，<code class="language-plaintext highlighter-rouge">#toolbar</code>的父元素开始脱离视口，一旦视口的顶部与<code class="language-plaintext highlighter-rouge">#toolbar</code>的距离小于<code class="language-plaintext highlighter-rouge">20px</code>（门槛值），<code class="language-plaintext highlighter-rouge">#toolbar</code>就自动变为<code class="language-plaintext highlighter-rouge">fixed</code>定位，保持与视口顶部<code class="language-plaintext highlighter-rouge">20px</code>的距离。页面继续向下滚动，父元素彻底离开视口（即整个父元素完全不可见），<code class="language-plaintext highlighter-rouge">#toolbar</code>恢复成<code class="language-plaintext highlighter-rouge">relative</code>定位。</p>

<h2 id="五-sticky-的应用">五、 sticky 的应用</h2>

<p><code class="language-plaintext highlighter-rouge">sticky</code>定位可以实现一些很有用的效果。除了上面提到”动态固定”效果，这里再介绍两个。</p>

<h2 id="51-堆叠效果">5.1 堆叠效果</h2>

<p>堆叠效果（stacking）指的是页面滚动时，下方的元素覆盖上方的元素。下面是一个图片堆叠的例子，下方的图片会随着页面滚动，覆盖上方的图片（查看 <a href="https://jsbin.com/fegiqoquki/edit?html,css,output">demo</a>）。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111609.jpg" alt="img" /></p>

<p>HTML 代码就是几张图片。</p>

<blockquote>
  <pre><code class="language-markup">  &lt;div&gt;&lt;img src="pic1.jpg"&gt;&lt;/div&gt;
  &lt;div&gt;&lt;img src="pic2.jpg"&gt;&lt;/div&gt;
  &lt;div&gt;&lt;img src="pic3.jpg"&gt;&lt;/div&gt;
</code></pre>
</blockquote>

<p>CSS 代码极其简单，只要两行。</p>

<blockquote>
  <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">div</span> <span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="n">sticky</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span>
  <span class="p">}</span>
</code></pre></div>  </div>
</blockquote>

<p>它的原理是页面向下滚动时，每张图片都会变成<code class="language-plaintext highlighter-rouge">fixed</code>定位，导致后一张图片重叠在前一张图片上面。详细解释可以看<a href="https://dev.to/vinceumo/slide-stacking-effect-using-position-sticky-91f">这里</a>。</p>

<h3 id="52-表格的表头锁定">5.2 表格的表头锁定</h3>

<p>大型表格滚动的时候，表头始终固定，也可以用<code class="language-plaintext highlighter-rouge">sticky</code>实现（查看 <a href="https://jsbin.com/decemanohe/edit?html,css,output">demo</a>）。</p>

<p><img src="https://www.wangbase.com/blogimg/asset/201911/bg2019111610.jpg" alt="img" /></p>

<p>CSS 代码也很简单。</p>

<blockquote>
  <div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">th</span> <span class="p">{</span>
    <span class="nl">position</span><span class="p">:</span> <span class="n">sticky</span><span class="p">;</span>
    <span class="nl">top</span><span class="p">:</span> <span class="m">0</span><span class="p">;</span> 
  <span class="p">}</span>
</code></pre></div>  </div>
</blockquote>

<p>需要注意的是，<code class="language-plaintext highlighter-rouge">sticky</code>必须设在<code class="language-plaintext highlighter-rouge">&lt;th&gt;</code>元素上面，不能设在<code class="language-plaintext highlighter-rouge">&lt;thead&gt;</code>和<code class="language-plaintext highlighter-rouge">&lt;tr&gt;</code>元素，因为这两个元素没有<code class="language-plaintext highlighter-rouge">relative</code>定位，也就无法产生<code class="language-plaintext highlighter-rouge">sticky</code>效果。详细解释可以看<a href="https://css-tricks.com/position-sticky-and-table-headers/">这里</a>。</p>

<p>（正文完）</p>
:ET