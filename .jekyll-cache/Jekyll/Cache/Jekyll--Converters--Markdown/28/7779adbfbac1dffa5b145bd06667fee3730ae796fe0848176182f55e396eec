I"l<h1 id="leetcode-09-回文数">LeetCode-<a href="https://leetcode-cn.com/problems/palindrome-number/">09 回文数</a></h1>

<iframe width="560" height="315" src="https://www.youtube.com/embed/qv7yjO5V7I0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<p>tag: easy，字符串</p>

<p><strong>题目：</strong></p>

<p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p>

<p><strong>示例 1：</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>输入: 121
输出: true
</code></pre></div></div>

<p><strong>示例 2:</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>输入: -121
输出: false
解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数
</code></pre></div></div>

<p><strong>示例 3:</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>输入: 10
输出: false
解释: 从右向左读, 为 01 。因此它不是一个回文数。
</code></pre></div></div>

<h1 id="方法一一位一位的取">方法一：一位一位的取</h1>

<p>看示例，如果一个数是负数，那它的回文数就肯定是FALSE</p>

<p>假设输出是num，初始化为0，</p>

<p>对输入的值a，取绝对值，不希望符号影响后面的操作</p>

<p>用一个while loop来解决（取个位temp，加到num，缩小10倍a），从右开始取，每取一位放到num里，第二次进入num时，前面的数要乘以10再加上num，</p>

<p>同样在每次取出一个num时，这个a都要除以10，保证最后一个数字已经取出了。</p>

<p>a对10取模，拿到个位，放到temp里，</p>

<p>num = num *10 + temp，是说把num往左移，空出来新的位置给temp</p>

<p>对a除以10，去掉个位，</p>

<p>最后做判断，只有x&gt;0并且x=num时才是TRUE，否则是FALSE</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">isPalindrome</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">):</span>
        <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
        <span class="n">a</span> <span class="o">=</span> <span class="nb">abs</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
        <span class="k">while</span><span class="p">(</span><span class="n">a</span><span class="o">!=</span><span class="mi">0</span><span class="p">):</span>
            <span class="n">temp</span> <span class="o">=</span> <span class="n">a</span> <span class="o">%</span> <span class="mi">10</span>
            <span class="n">num</span> <span class="o">=</span> <span class="n">num</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">temp</span> 
            <span class="n">a</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">a</span> <span class="o">/</span> <span class="mi">10</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">==</span> <span class="n">num</span><span class="p">:</span> 
            <span class="k">return</span> <span class="bp">True</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">False</span>
</code></pre></div></div>

<blockquote>
  <p>执行用时：140 ms, 在所有 Python3 提交中击败了5.76%的用户</p>

  <p>内存消耗：13.6 MB, 在所有 Python3 提交中击败了5.88%的用户</p>
</blockquote>

<h1 id="方法二转化为字符串">方法二：转化为字符串</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
     <span class="k">def</span> <span class="nf">isPalindrome</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">x</span><span class="p">:</span> <span class="nb">int</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="nb">bool</span><span class="p">:</span>
         <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)[:]</span> <span class="o">==</span> <span class="nb">str</span><span class="p">(</span><span class="n">x</span><span class="p">)[::</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>
             <span class="k">return</span> <span class="bp">True</span>
         <span class="k">else</span><span class="p">:</span>
             <span class="k">return</span> <span class="bp">False</span>
</code></pre></div></div>

<blockquote>
  <p>执行用时：88 ms, 在所有 Python3 提交中击败了60.77%的用户</p>

  <p>内存消耗：13.7 MB, 在所有 Python3 提交中击败了5.88%的用户</p>
</blockquote>
:ET