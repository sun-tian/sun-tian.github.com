I" <h1 id="js循环遍历数组对象forin-forofforeachfor"><a href="https://juejin.im/post/6844903569087266823">JS循环遍历数组|对象:for…in ,for…of,forEach,for</a></h1>

<h1 id="js循环遍历数组对象forin-forofforeachfor-1">JS循环遍历数组|对象:for…in ,for…of,forEach,for</h1>

<h2 id="循环遍历数组的方法">循环遍历数组的方法：</h2>

<h3 id="forin-es5">for…in ~ES5</h3>

<p>遍历key值，遍历对象和数组</p>

<p>1.数组</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for(let index in array) {  
    console.log(index,array[index]);  
};  
</code></pre></div></div>

<p>2.对象：为循环“enumerable”对象设计的</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var A = {a:1,b:2,c:3,d:"hello world"};  
for(let k in A) {  
    console.log(k,A[k]);  
} 
</code></pre></div></div>

<h3 id="forof-es6">for…of ~ES6</h3>

<ul>
  <li>可以使用<strong>终止循环执行的方法</strong>：break、continue、return 和 throw</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>const iterable = ['aa', 'bb', 'cc']; 
//iterable可迭代的；可迭代对象；可遍历对象
for (const value of iterable) {
  console.log(value);
  break;
}
// aa  break 关键字在一次执行后终止循环
</code></pre></div></div>

<ul>
  <li>支持<strong>Array，Map，Set，String</strong>，TypedArray，arguments 对象的遍历，循环读取<strong>键值</strong></li>
</ul>

<p><strong>类数组：</strong><strong>Map，Set</strong></p>

<p>for…of是es6标准，用来遍历value值，遍历数组，</p>

<ul>
  <li>for…of 循环仅适用于迭代,而普通对象不可迭代。</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.for...of对普通对象进行操作：
const obj = { fname: 'foo', lname: 'bar' }; 
for (const value of obj) { 
    console.log(value);
}
// TypeError: obj[Symbol.iterator] is not a function
2.将类数组(array-like)对象转换为数组来绕过它。该对象将具有一个 length 属性，其元素必须可以被索引。
const obj = { length: 3, 0: 'foo', 1: 'bar', 2: 'baz' };
const array = Array.from(obj);
for (const value of array) { 
    console.log(value);
}
// foo
// bar
// baz
Array.from() 方法可以让我通过类数组(array-like)或可迭代对象来创建一个新的 Array(数组) 实例。
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1.数组
const array = ['a', 'b', 'c'];
for(let v of array) {  
    console.log(v);  
}; 
-------------------------------- 
2.字符串  
let s = "helloabc"; 
for(let c of s) {  
  console.log(c); 
 }
-------------------------------- 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3.Map
Map 对象就是保存 key-value(键值) 对。对象和原始值可以用作 key(键)或 value(值)。Map 对象根据其插入方式迭代元素。换句话说， for...of 循环将为每次迭代返回一个 key-value(键值) 数组。


let iterable = new Map([["a", 1], ["b", 2], ["c", 3]]);
for (let entry of iterable) {
  console.log(entry);
}
// ["a", 1]
// ["b", 2]
// ["c", 3]
for (let [key, value] of iterable) {
  console.log(value);
}
// 1
// 2
// 3
-------------------------------- 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>4.set
Set(集合) 对象允许你存储任何类型的唯一值，这些值可以是原始值或对象。 Set(集合) 对象只是值的集合。 Set(集合) 元素的迭代基于其插入顺序。 Set(集合) 中的值只能发生一次。如果您创建一个具有多个相同元素的 Set(集合) ，那么它仍然被认为是单个元素。


let iterable = new Set([1, 1, 2, 2, 3, 3]);
for (let value of iterable) {
  console.log(value);
}
// 1
// 2
// 3
-------------------------------- 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>5.arguments对象
(function() {
  for (let argument of arguments) {
    console.log(argument);
  }
})(1, 2, 3);
// 1
// 2
// 3
</code></pre></div></div>

<h3 id="forinforof的区别">for…in,for…of的区别？</h3>

<ul>
  <li>for…in遍历key值，for…of遍历value值</li>
  <li>for…in可以遍历对象、数组，但是一般不推荐遍历数组，for…of不能遍历普通对象</li>
</ul>

<h3 id="foreach">forEach</h3>

<p>不能使用break语句跳出循环，或者使用return从函数体内返回</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array.forEach(v=&gt;{  
    console.log(v);  
});
array.forEach（function(v){  
    console.log(v);  
});
</code></pre></div></div>

<h3 id="for-基本">for 基本</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var array = [1,2,3,4,5,6,7];  
for (var i = 0; i &lt; array.length; i) {  
    console.log(i,array[i]);  
}  
</code></pre></div></div>

<p><a href="https://juejin.im/post/6845166891472781325">Link</a></p>

:ET