I"kœ<h1 id="Â§öÁøªËØëÂπ≥Âè∞apiÁöÑË∞ÉÁî®">Â§öÁøªËØëÂπ≥Âè∞APIÁöÑË∞ÉÁî®</h1>

<h2 id="‰∏Ägoogle">‰∏Ä„ÄÅGoogle</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#! /usr/bin/env python
# -*- coding: utf-8 -*-
</span><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">print_function</span><span class="p">,</span> <span class="n">unicode_literals</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">copy</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">codecs</span>
<span class="kn">import</span> <span class="nn">pprint</span>

<span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
	<span class="nb">reload</span><span class="p">(</span><span class="n">sys</span><span class="p">)</span>   <span class="c1"># noqa: F821
</span>	<span class="n">sys</span><span class="p">.</span><span class="n">setdefaultencoding</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
	<span class="k">pass</span>

<span class="n">langmap</span> <span class="o">=</span> <span class="p">{</span>
	<span class="s">"chinese"</span><span class="p">:</span> <span class="s">"zh-CN"</span><span class="p">,</span>
	<span class="s">"chinese simplified"</span><span class="p">:</span> <span class="s">"zh-CHS"</span><span class="p">,</span>
	<span class="s">"chinese traditional"</span><span class="p">:</span> <span class="s">"zh-CHT"</span><span class="p">,</span>
	<span class="s">"english"</span><span class="p">:</span> <span class="s">"en"</span><span class="p">,</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">BasicTranslator</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>

	<span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">name</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_config</span> <span class="o">=</span> <span class="p">{}</span>  
		<span class="bp">self</span><span class="p">.</span><span class="n">_options</span> <span class="o">=</span> <span class="n">argv</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_session</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_load_config</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_check_proxy</span><span class="p">()</span>

	<span class="k">def</span> <span class="nf">__load_ini</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ininame</span><span class="p">,</span> <span class="n">codec</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
		<span class="n">config</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">ininame</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">None</span>
		<span class="k">elif</span> <span class="ow">not</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">exists</span><span class="p">(</span><span class="n">ininame</span><span class="p">):</span>
			<span class="k">return</span> <span class="bp">None</span>
		<span class="k">try</span><span class="p">:</span>
			<span class="n">content</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">ininame</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
		<span class="k">except</span> <span class="nb">IOError</span><span class="p">:</span>
			<span class="n">content</span> <span class="o">=</span> <span class="s">b''</span>
		<span class="k">if</span> <span class="n">content</span><span class="p">[:</span><span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="s">b'</span><span class="se">\xef\xbb\xbf</span><span class="s">'</span><span class="p">:</span>
			<span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">[</span><span class="mi">3</span><span class="p">:].</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
		<span class="k">elif</span> <span class="n">codec</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
			<span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">codec</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="n">codec</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">getdefaultencoding</span><span class="p">()</span>
			<span class="n">text</span> <span class="o">=</span> <span class="bp">None</span>
			<span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="p">[</span><span class="n">codec</span><span class="p">,</span> <span class="s">'gbk'</span><span class="p">,</span> <span class="s">'utf-8'</span><span class="p">]:</span>
				<span class="k">try</span><span class="p">:</span>
					<span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
					<span class="k">break</span>
				<span class="k">except</span><span class="p">:</span>
					<span class="k">pass</span>
			<span class="k">if</span> <span class="n">text</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
				<span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
			<span class="kn">import</span> <span class="nn">StringIO</span>
			<span class="kn">import</span> <span class="nn">ConfigParser</span>
			<span class="n">sio</span> <span class="o">=</span> <span class="n">StringIO</span><span class="p">.</span><span class="n">StringIO</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
			<span class="n">cp</span> <span class="o">=</span> <span class="n">ConfigParser</span><span class="p">.</span><span class="n">ConfigParser</span><span class="p">()</span>
			<span class="n">cp</span><span class="p">.</span><span class="n">readfp</span><span class="p">(</span><span class="n">sio</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="kn">import</span> <span class="nn">configparser</span>
			<span class="n">cp</span> <span class="o">=</span> <span class="n">configparser</span><span class="p">.</span><span class="n">ConfigParser</span><span class="p">(</span><span class="n">interpolation</span> <span class="o">=</span> <span class="bp">None</span><span class="p">)</span>
			<span class="n">cp</span><span class="p">.</span><span class="n">read_string</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
		<span class="k">for</span> <span class="n">sect</span> <span class="ow">in</span> <span class="n">cp</span><span class="p">.</span><span class="n">sections</span><span class="p">():</span>
			<span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">val</span> <span class="ow">in</span> <span class="n">cp</span><span class="p">.</span><span class="n">items</span><span class="p">(</span><span class="n">sect</span><span class="p">):</span>
				<span class="n">lowsect</span><span class="p">,</span> <span class="n">lowkey</span> <span class="o">=</span> <span class="n">sect</span><span class="p">.</span><span class="n">lower</span><span class="p">(),</span> <span class="n">key</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span>
				<span class="n">config</span><span class="p">.</span><span class="n">setdefault</span><span class="p">(</span><span class="n">lowsect</span><span class="p">,</span> <span class="p">{})[</span><span class="n">lowkey</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span>
		<span class="k">if</span> <span class="s">'default'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">config</span><span class="p">:</span>
			<span class="n">config</span><span class="p">[</span><span class="s">'default'</span><span class="p">]</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="k">return</span> <span class="n">config</span>

	<span class="k">def</span> <span class="nf">_load_config</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_config</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="n">ininame</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">expanduser</span><span class="p">(</span><span class="s">'~/.config/translator/config.ini'</span><span class="p">)</span>
		<span class="n">config</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">__load_ini</span><span class="p">(</span><span class="n">ininame</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">config</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">False</span>
		<span class="k">for</span> <span class="n">section</span> <span class="ow">in</span> <span class="p">(</span><span class="s">'default'</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
			<span class="n">items</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">section</span><span class="p">,</span> <span class="p">{})</span>
			<span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">items</span><span class="p">:</span>
				<span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
		<span class="k">return</span> <span class="bp">True</span>

	<span class="k">def</span> <span class="nf">_check_proxy</span> <span class="p">(</span><span class="bp">self</span><span class="p">):</span>
		<span class="n">proxy</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'all_proxy'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">proxy</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">False</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">proxy</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
			<span class="k">return</span> <span class="bp">False</span>
		<span class="k">if</span> <span class="s">'proxy'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">:</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="s">'proxy'</span><span class="p">]</span> <span class="o">=</span> <span class="n">proxy</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span>
		<span class="k">return</span> <span class="bp">True</span>

	<span class="k">def</span> <span class="nf">request</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">post</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span> <span class="n">header</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
		<span class="kn">import</span> <span class="nn">requests</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="p">.</span><span class="n">_session</span><span class="p">:</span>
			<span class="bp">self</span><span class="p">.</span><span class="n">_session</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">Session</span><span class="p">()</span>
		<span class="n">argv</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="k">if</span> <span class="n">header</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
			<span class="n">header</span> <span class="o">=</span> <span class="n">copy</span><span class="p">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">header</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="n">header</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span><span class="p">:</span>
			<span class="n">header</span><span class="p">[</span><span class="s">'User-Agent'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span>
		<span class="n">argv</span><span class="p">[</span><span class="s">'headers'</span><span class="p">]</span> <span class="o">=</span> <span class="n">header</span>
		<span class="n">timeout</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'timeout'</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
		<span class="n">proxy</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'proxy'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">timeout</span><span class="p">:</span>
			<span class="n">argv</span><span class="p">[</span><span class="s">'timeout'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">timeout</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">proxy</span><span class="p">:</span>
			<span class="n">proxies</span> <span class="o">=</span> <span class="p">{</span><span class="s">'http'</span><span class="p">:</span> <span class="n">proxy</span><span class="p">,</span> <span class="s">'https'</span><span class="p">:</span> <span class="n">proxy</span><span class="p">}</span>
			<span class="n">argv</span><span class="p">[</span><span class="s">'proxies'</span><span class="p">]</span> <span class="o">=</span> <span class="n">proxies</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">post</span><span class="p">:</span>
			<span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
				<span class="n">argv</span><span class="p">[</span><span class="s">'params'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
				<span class="n">argv</span><span class="p">[</span><span class="s">'data'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">post</span><span class="p">:</span>
			<span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_session</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_session</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">r</span>

	<span class="k">def</span> <span class="nf">http_get</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">header</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">header</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">http_post</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">header</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="n">header</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">url_unquote</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">plus</span> <span class="o">=</span> <span class="bp">True</span><span class="p">):</span>
		<span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
			<span class="kn">import</span> <span class="nn">urllib</span>
			<span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
				<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">unquote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
			<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">unquote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
		<span class="kn">import</span> <span class="nn">urllib.parse</span>
		<span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
			<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">unquote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">unquote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">url_quote</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">plus</span> <span class="o">=</span> <span class="bp">True</span><span class="p">):</span>
		<span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
			<span class="kn">import</span> <span class="nn">urllib</span>
			<span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>    <span class="c1"># noqa: F821
</span>				<span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
			<span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
				<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">quote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
			<span class="k">return</span> <span class="n">urlparse</span><span class="p">.</span><span class="n">quote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>   <span class="c1"># noqa: F821
</span>		<span class="kn">import</span> <span class="nn">urllib.parse</span>
		<span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
			<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">quote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">quote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>

	<span class="k">def</span> <span class="nf">create_translation</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">text</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
		<span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'engine'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_name</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'sl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sl</span>              <span class="c1"># Êù•Ê∫êËØ≠Ë®Ä
</span>		<span class="n">res</span><span class="p">[</span><span class="s">'tl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tl</span>              <span class="c1"># ÁõÆÊ†áËØ≠Ë®Ä
</span>		<span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>          <span class="c1"># ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨
</span>		<span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>      <span class="c1"># Èü≥Ê†á
</span>		<span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>    <span class="c1"># ÁÆÄÂçïÈáä‰πâ
</span>		<span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>       <span class="c1"># ÂàÜË°åËß£Èáä
</span>		<span class="k">return</span> <span class="n">res</span>

	<span class="c1"># ÁøªËØëÁªìÊûúÔºöÈúÄË¶ÅÂ°´ÂÖÖÂ¶Ç‰∏ãÂ≠óÊÆµ
</span>	<span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>

	<span class="c1"># ÊòØÂê¶ÊòØËã±Êñá
</span>	<span class="k">def</span> <span class="nf">check_english</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="k">for</span> <span class="n">ch</span> <span class="ow">in</span> <span class="n">text</span><span class="p">:</span>
			<span class="k">if</span> <span class="nb">ord</span><span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">128</span><span class="p">:</span>
				<span class="k">return</span> <span class="bp">False</span>
		<span class="k">return</span> <span class="bp">True</span>

	<span class="c1"># ÁåúÊµãËØ≠Ë®Ä
</span>	<span class="k">def</span> <span class="nf">guess_language</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="k">if</span> <span class="p">((</span><span class="ow">not</span> <span class="n">sl</span><span class="p">)</span> <span class="ow">or</span> <span class="n">sl</span> <span class="o">==</span> <span class="s">'auto'</span><span class="p">)</span> <span class="ow">and</span> <span class="p">((</span><span class="ow">not</span> <span class="n">tl</span><span class="p">)</span> <span class="ow">or</span> <span class="n">tl</span> <span class="o">==</span> <span class="s">'auto'</span><span class="p">):</span>
			<span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">check_english</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
				<span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="p">(</span><span class="s">'en-US'</span><span class="p">,</span> <span class="s">'zh-CN'</span><span class="p">)</span>
			<span class="k">else</span><span class="p">:</span>
				<span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="p">(</span><span class="s">'zh-CN'</span><span class="p">,</span> <span class="s">'en-US'</span><span class="p">)</span>
		<span class="k">if</span> <span class="n">sl</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">langmap</span><span class="p">:</span>
			<span class="n">sl</span> <span class="o">=</span> <span class="n">langmap</span><span class="p">[</span><span class="n">sl</span><span class="p">.</span><span class="n">lower</span><span class="p">()]</span>
		<span class="k">if</span> <span class="n">tl</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">langmap</span><span class="p">:</span>
			<span class="n">tl</span> <span class="o">=</span> <span class="n">langmap</span><span class="p">[</span><span class="n">tl</span><span class="p">.</span><span class="n">lower</span><span class="p">()]</span>
		<span class="k">return</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span>
	
	<span class="k">def</span> <span class="nf">md5sum</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="kn">import</span> <span class="nn">hashlib</span>
		<span class="n">m</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">md5</span><span class="p">()</span>
		<span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
			<span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>   <span class="c1"># noqa: F821
</span>				<span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
		<span class="k">else</span><span class="p">:</span>
			<span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
				<span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
		<span class="n">m</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">m</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span>

<span class="k">class</span> <span class="nc">AzureTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

	<span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
		<span class="nb">super</span><span class="p">(</span><span class="n">AzureTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'azure'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
		<span class="k">if</span> <span class="s">'apikey'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">:</span>
			<span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'error: missing apikey in [azure] section</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
			<span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">()</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">apikey</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="s">'apikey'</span><span class="p">]</span>

	<span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="kn">import</span> <span class="nn">uuid</span>
		<span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
		<span class="n">qs</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">sl</span><span class="p">)</span>
		<span class="n">qt</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">tl</span><span class="p">)</span>
		<span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.cognitive.microsofttranslator.com/translate'</span>
		<span class="n">url</span> <span class="o">+=</span> <span class="s">'?api-version=3.0&amp;from={}&amp;to={}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">qs</span><span class="p">,</span> <span class="n">qt</span><span class="p">)</span>
		<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
			<span class="s">'Ocp-Apim-Subscription-Key'</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">apikey</span><span class="p">,</span>
			<span class="s">'Content-type'</span><span class="p">:</span> <span class="s">'application/json'</span><span class="p">,</span>
			<span class="s">'X-ClientTraceId'</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">uuid</span><span class="p">.</span><span class="n">uuid4</span><span class="p">())</span>
		<span class="p">}</span>
		<span class="n">body</span> <span class="o">=</span> <span class="p">[{</span><span class="s">'text'</span><span class="p">:</span> <span class="n">text</span><span class="p">}]</span>
		<span class="kn">import</span> <span class="nn">json</span>
		<span class="n">resp</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">json</span><span class="p">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">body</span><span class="p">),</span> <span class="n">headers</span><span class="p">).</span><span class="n">json</span><span class="p">()</span>
		<span class="c1"># print(resp)
</span>		<span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'sl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sl</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'tl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tl</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'translation'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">render</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'html'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'xterm'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
		<span class="k">return</span> <span class="n">res</span>

	<span class="k">def</span> <span class="nf">render</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">resp</span><span class="p">:</span>
			<span class="k">return</span> <span class="s">''</span>
		<span class="n">x</span> <span class="o">=</span> <span class="n">resp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">x</span><span class="p">:</span>
			<span class="k">return</span> <span class="s">''</span>
		<span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="s">'translations'</span><span class="p">]</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">y</span><span class="p">:</span>
			<span class="k">return</span> <span class="s">''</span>
		<span class="n">output</span> <span class="o">=</span> <span class="s">''</span>
		<span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">y</span><span class="p">:</span>
			<span class="n">output</span> <span class="o">+=</span> <span class="n">item</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span>
		<span class="k">return</span> <span class="n">output</span>

<span class="k">class</span> <span class="nc">GoogleTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

	<span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
		<span class="nb">super</span><span class="p">(</span><span class="n">GoogleTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'google'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">=</span> <span class="s">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0)'</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">+=</span> <span class="s">' Gecko/20100101 Firefox/59.0'</span>

	<span class="k">def</span> <span class="nf">get_url</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">qry</span><span class="p">):</span>
		<span class="n">http_host</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'host'</span><span class="p">,</span> <span class="s">'translate.googleapis.com'</span><span class="p">)</span>
		<span class="n">qry</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">qry</span><span class="p">)</span>
		<span class="n">url</span> <span class="o">=</span> <span class="s">'https://{}/translate_a/single?client=gtx&amp;sl={}&amp;tl={}&amp;dt=at&amp;dt=bd&amp;dt=ex&amp;'</span> \
			  <span class="s">'dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;q={}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span>
					  <span class="n">http_host</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">qry</span><span class="p">)</span>    <span class="c1"># noqa: E216
</span>		<span class="k">return</span> <span class="n">url</span>

	<span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
		<span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
		<span class="bp">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span>
		<span class="n">url</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_url</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
		<span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
		<span class="k">if</span> <span class="ow">not</span> <span class="n">r</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">None</span>
		<span class="k">try</span><span class="p">:</span>
			<span class="n">obj</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
		<span class="k">except</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">None</span>
		<span class="c1"># pprint.pprint(obj)
</span>		<span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_phonetic</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_definition</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_explain</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'detail'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_detail</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
		<span class="n">res</span><span class="p">[</span><span class="s">'alternative'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_alternative</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">res</span>

	<span class="k">def</span> <span class="nf">get_phonetic</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
		<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
			<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
				<span class="k">return</span> <span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
		<span class="k">return</span> <span class="bp">None</span>

	<span class="k">def</span> <span class="nf">get_definition</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
		<span class="n">paraphrase</span> <span class="o">=</span> <span class="s">''</span>
		<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
			<span class="k">if</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
				<span class="n">paraphrase</span> <span class="o">+=</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
		<span class="k">return</span> <span class="n">paraphrase</span>

	<span class="k">def</span> <span class="nf">get_explain</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
		<span class="n">explain</span> <span class="o">=</span> <span class="p">[]</span>
		<span class="k">if</span> <span class="n">obj</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
			<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
				<span class="n">expl</span> <span class="o">=</span> <span class="s">'[{}] '</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
				<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
					<span class="n">expl</span> <span class="o">+=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s">';'</span>
				<span class="n">explain</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">expl</span><span class="p">)</span>
		<span class="k">return</span> <span class="n">explain</span>

	<span class="k">def</span> <span class="nf">get_detail</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
		<span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
		<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">13</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">None</span>
		<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="mi">12</span><span class="p">]:</span>
			<span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'[{}]'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
			<span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
				<span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'- {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
				<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">:</span>
					<span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'  * {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
		<span class="k">return</span> <span class="n">result</span>

	<span class="k">def</span> <span class="nf">get_alternative</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
		<span class="n">definition</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_definition</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
		<span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
		<span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">:</span>
			<span class="k">return</span> <span class="bp">None</span>
		<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="mi">5</span><span class="p">]:</span>
			<span class="c1"># result.append('- {}'.format(x[0]))
</span>			<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
				<span class="k">if</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="n">definition</span><span class="p">:</span>
					<span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">' * {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
		<span class="k">return</span> <span class="n">result</span>

<span class="n">ENGINES</span> <span class="o">=</span> <span class="p">{</span>
	<span class="s">'google'</span><span class="p">:</span> <span class="n">GoogleTranslator</span>
<span class="p">}</span>

<span class="k">def</span> <span class="nf">trans_zh2en</span><span class="p">(</span><span class="n">argv</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
	<span class="n">engine</span> <span class="o">=</span> <span class="s">'google'</span>
	<span class="n">sl</span> <span class="o">=</span> <span class="s">'zh'</span>
	<span class="n">tl</span> <span class="o">=</span> <span class="s">'en'</span>
	<span class="n">text</span> <span class="o">=</span> <span class="n">argv</span>
	<span class="n">cls</span> <span class="o">=</span> <span class="n">ENGINES</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">engine</span><span class="p">)</span>
	<span class="n">translator</span> <span class="o">=</span> <span class="n">cls</span><span class="p">()</span>
	<span class="n">res</span> <span class="o">=</span> <span class="n">translator</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
	<span class="k">return</span> <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
	<span class="n">res</span> <span class="o">=</span> <span class="n">trans_zh2en</span><span class="p">(</span><span class="s">'ÂæàÈ´òÂÖ¥ËßÅÂà∞‰Ω†ÔºÅ'</span><span class="p">)</span>
	<span class="k">print</span><span class="p">(</span><span class="n">res</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="‰∫åniutrans">‰∫å„ÄÅNiutrans</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">selenium</span> <span class="kn">import</span> <span class="n">webdriver</span>
<span class="kn">from</span> <span class="nn">selenium.webdriver.chrome.options</span> <span class="kn">import</span> <span class="n">Options</span>
<span class="kn">import</span> <span class="nn">time</span>

<span class="n">web</span> <span class="o">=</span> <span class="s">'https://niutrans.vip/trans'</span>
<span class="n">chrome_options</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">ChromeOptions</span><span class="p">()</span>
<span class="n">chrome_options</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">'--headless'</span><span class="p">)</span>
<span class="n">driver</span> <span class="o">=</span> <span class="n">webdriver</span><span class="p">.</span><span class="n">Chrome</span><span class="p">(</span><span class="n">executable_path</span><span class="o">=</span><span class="s">'/usr/local/bin/chromedriver'</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="n">chrome_options</span><span class="p">)</span>
<span class="n">driver</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">web</span><span class="p">)</span>

<span class="n">trans_line</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">'ne_claim_en_no_bracket_niutrans.txt'</span><span class="p">,</span> <span class="s">'a'</span><span class="p">)</span>

<span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s">'ne_claim_zh_no_bracket.txt'</span><span class="p">,</span> <span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">readlines</span><span class="p">()</span>
    <span class="n">n</span> <span class="o">=</span> <span class="mi">2</span>
    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="p">[</span><span class="n">lines</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span><span class="o">+</span><span class="n">n</span><span class="p">]</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">lines</span><span class="p">),</span> <span class="n">n</span><span class="p">)]:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_id</span><span class="p">(</span><span class="s">'textarea'</span><span class="p">).</span><span class="n">send_keys</span><span class="p">(</span><span class="n">line</span><span class="p">)</span>        
            <span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_class_name</span><span class="p">(</span><span class="s">'trans-button-box'</span><span class="p">).</span><span class="n">click</span><span class="p">()</span>
            <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
            <span class="n">driver</span><span class="p">.</span><span class="n">implicitly_wait</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>
            <span class="n">transed_line</span> <span class="o">=</span> <span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_class_name</span><span class="p">(</span><span class="s">'results-container'</span><span class="p">).</span><span class="n">text</span>
            <span class="n">trans_line</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="n">transed_line</span><span class="p">.</span><span class="n">strip</span><span class="p">())</span>
            <span class="n">trans_line</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
            <span class="n">driver</span><span class="p">.</span><span class="n">find_element_by_class_name</span><span class="p">(</span><span class="s">'el-icon-close'</span><span class="p">).</span><span class="n">click</span><span class="p">()</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
            <span class="n">transed_line</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="‰∏âyoudao">‰∏â„ÄÅyoudao</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#! /usr/bin/env python
# -*- coding: utf-8 -*-
#======================================================================
#
# translator.py - ÂëΩ‰ª§Ë°åÁøªËØëÔºàË∞∑Ê≠åÔºåÂøÖÂ∫îÔºåÁôæÂ∫¶ÔºåÊúâÈÅìÔºåËØçÈú∏Ôºâ
#
# Created by skywind on 2019/06/14
# Version: 1.0.2, Last Modified: 2019/06/18 18:40
#
#======================================================================
</span><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">print_function</span><span class="p">,</span> <span class="n">unicode_literals</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">copy</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">codecs</span>
<span class="kn">import</span> <span class="nn">pprint</span>


<span class="c1">#----------------------------------------------------------------------
# ÁºñÁ†ÅÂÖºÂÆπ
#----------------------------------------------------------------------
</span><span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
    <span class="nb">reload</span><span class="p">(</span><span class="n">sys</span><span class="p">)</span>   <span class="c1"># noqa: F821
</span>    <span class="n">sys</span><span class="p">.</span><span class="n">setdefaultencoding</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
    <span class="c1"># sys.stdout = codecs.getwriter('utf-8')(sys.stdout, 'ignore')
</span>    <span class="c1"># sys.stderr = codecs.getwriter('utf-8')(sys.stderr, 'ignore')
</span><span class="k">else</span><span class="p">:</span>
    <span class="c1"># sys.stdout = codecs.getwriter('utf-8')(sys.stdout.buffer, 'ignore')
</span>    <span class="c1"># sys.stderr = codecs.getwriter('utf-8')(sys.stderr.buffer, 'ignore')
</span>    <span class="k">pass</span>


<span class="c1">#----------------------------------------------------------------------
# ËØ≠Ë®ÄÁöÑÂà´Âêç
#----------------------------------------------------------------------
</span><span class="n">langmap</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"arabic"</span><span class="p">:</span> <span class="s">"ar"</span><span class="p">,</span>
    <span class="s">"bulgarian"</span><span class="p">:</span> <span class="s">"bg"</span><span class="p">,</span>
    <span class="s">"catalan"</span><span class="p">:</span> <span class="s">"ca"</span><span class="p">,</span>
    <span class="s">"chinese"</span><span class="p">:</span> <span class="s">"zh-CN"</span><span class="p">,</span>
    <span class="s">"chinese simplified"</span><span class="p">:</span> <span class="s">"zh-CHS"</span><span class="p">,</span>
    <span class="s">"chinese traditional"</span><span class="p">:</span> <span class="s">"zh-CHT"</span><span class="p">,</span>
    <span class="s">"czech"</span><span class="p">:</span> <span class="s">"cs"</span><span class="p">,</span>
    <span class="s">"danish"</span><span class="p">:</span> <span class="s">"da"</span><span class="p">,</span>	
    <span class="s">"dutch"</span><span class="p">:</span> <span class="s">"nl"</span><span class="p">,</span>
    <span class="s">"english"</span><span class="p">:</span> <span class="s">"en"</span><span class="p">,</span>
    <span class="s">"estonian"</span><span class="p">:</span> <span class="s">"et"</span><span class="p">,</span>
    <span class="s">"finnish"</span><span class="p">:</span> <span class="s">"fi"</span><span class="p">,</span>
    <span class="s">"french"</span><span class="p">:</span> <span class="s">"fr"</span><span class="p">,</span>
    <span class="s">"german"</span><span class="p">:</span> <span class="s">"de"</span><span class="p">,</span>
    <span class="s">"greek"</span><span class="p">:</span> <span class="s">"el"</span><span class="p">,</span>
    <span class="s">"haitian creole"</span><span class="p">:</span> <span class="s">"ht"</span><span class="p">,</span>
    <span class="s">"hebrew"</span><span class="p">:</span> <span class="s">"he"</span><span class="p">,</span>
    <span class="s">"hindi"</span><span class="p">:</span> <span class="s">"hi"</span><span class="p">,</span>
    <span class="s">"hmong daw"</span><span class="p">:</span> <span class="s">"mww"</span><span class="p">,</span>
    <span class="s">"hungarian"</span><span class="p">:</span> <span class="s">"hu"</span><span class="p">,</span>
    <span class="s">"indonesian"</span><span class="p">:</span> <span class="s">"id"</span><span class="p">,</span>
    <span class="s">"italian"</span><span class="p">:</span> <span class="s">"it"</span><span class="p">,</span>
    <span class="s">"japanese"</span><span class="p">:</span> <span class="s">"ja"</span><span class="p">,</span>
    <span class="s">"klingon"</span><span class="p">:</span> <span class="s">"tlh"</span><span class="p">,</span>
    <span class="s">"klingon (piqad)"</span><span class="p">:</span><span class="s">"tlh-Qaak"</span><span class="p">,</span>
    <span class="s">"korean"</span><span class="p">:</span> <span class="s">"ko"</span><span class="p">,</span>
    <span class="s">"latvian"</span><span class="p">:</span> <span class="s">"lv"</span><span class="p">,</span>
    <span class="s">"lithuanian"</span><span class="p">:</span> <span class="s">"lt"</span><span class="p">,</span>
    <span class="s">"malay"</span><span class="p">:</span> <span class="s">"ms"</span><span class="p">,</span>
    <span class="s">"maltese"</span><span class="p">:</span> <span class="s">"mt"</span><span class="p">,</span>
    <span class="s">"norwegian"</span><span class="p">:</span> <span class="s">"no"</span><span class="p">,</span>
    <span class="s">"persian"</span><span class="p">:</span> <span class="s">"fa"</span><span class="p">,</span>
    <span class="s">"polish"</span><span class="p">:</span> <span class="s">"pl"</span><span class="p">,</span>
    <span class="s">"portuguese"</span><span class="p">:</span> <span class="s">"pt"</span><span class="p">,</span>
    <span class="s">"romanian"</span><span class="p">:</span> <span class="s">"ro"</span><span class="p">,</span>
    <span class="s">"russian"</span><span class="p">:</span> <span class="s">"ru"</span><span class="p">,</span>
    <span class="s">"slovak"</span><span class="p">:</span> <span class="s">"sk"</span><span class="p">,</span>
    <span class="s">"slovenian"</span><span class="p">:</span> <span class="s">"sl"</span><span class="p">,</span>
    <span class="s">"spanish"</span><span class="p">:</span> <span class="s">"es"</span><span class="p">,</span>
    <span class="s">"swedish"</span><span class="p">:</span> <span class="s">"sv"</span><span class="p">,</span>
    <span class="s">"thai"</span><span class="p">:</span> <span class="s">"th"</span><span class="p">,</span>
    <span class="s">"turkish"</span><span class="p">:</span> <span class="s">"tr"</span><span class="p">,</span>
    <span class="s">"ukrainian"</span><span class="p">:</span> <span class="s">"uk"</span><span class="p">,</span>
    <span class="s">"urdu"</span><span class="p">:</span> <span class="s">"ur"</span><span class="p">,</span>
    <span class="s">"vietnamese"</span><span class="p">:</span> <span class="s">"vi"</span><span class="p">,</span>
    <span class="s">"welsh"</span><span class="p">:</span> <span class="s">"cy"</span>
<span class="p">}</span>


<span class="c1">#----------------------------------------------------------------------
# BasicTranslator
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">BasicTranslator</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_config</span> <span class="o">=</span> <span class="p">{}</span>  
        <span class="bp">self</span><span class="p">.</span><span class="n">_options</span> <span class="o">=</span> <span class="n">argv</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_session</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_load_config</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_check_proxy</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">__load_ini</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ininame</span><span class="p">,</span> <span class="n">codec</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="n">config</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">ininame</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">elif</span> <span class="ow">not</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">exists</span><span class="p">(</span><span class="n">ininame</span><span class="p">):</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">content</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">ininame</span><span class="p">,</span> <span class="s">'rb'</span><span class="p">).</span><span class="n">read</span><span class="p">()</span>
        <span class="k">except</span> <span class="nb">IOError</span><span class="p">:</span>
            <span class="n">content</span> <span class="o">=</span> <span class="s">b''</span>
        <span class="k">if</span> <span class="n">content</span><span class="p">[:</span><span class="mi">3</span><span class="p">]</span> <span class="o">==</span> <span class="s">b'</span><span class="se">\xef\xbb\xbf</span><span class="s">'</span><span class="p">:</span>
            <span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">[</span><span class="mi">3</span><span class="p">:].</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="k">elif</span> <span class="n">codec</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">codec</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">codec</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">getdefaultencoding</span><span class="p">()</span>
            <span class="n">text</span> <span class="o">=</span> <span class="bp">None</span>
            <span class="k">for</span> <span class="n">name</span> <span class="ow">in</span> <span class="p">[</span><span class="n">codec</span><span class="p">,</span> <span class="s">'gbk'</span><span class="p">,</span> <span class="s">'utf-8'</span><span class="p">]:</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>
                    <span class="k">break</span>
                <span class="k">except</span><span class="p">:</span>
                    <span class="k">pass</span>
            <span class="k">if</span> <span class="n">text</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
                <span class="n">text</span> <span class="o">=</span> <span class="n">content</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
            <span class="kn">import</span> <span class="nn">StringIO</span>
            <span class="kn">import</span> <span class="nn">ConfigParser</span>
            <span class="n">sio</span> <span class="o">=</span> <span class="n">StringIO</span><span class="p">.</span><span class="n">StringIO</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
            <span class="n">cp</span> <span class="o">=</span> <span class="n">ConfigParser</span><span class="p">.</span><span class="n">ConfigParser</span><span class="p">()</span>
            <span class="n">cp</span><span class="p">.</span><span class="n">readfp</span><span class="p">(</span><span class="n">sio</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="kn">import</span> <span class="nn">configparser</span>
            <span class="n">cp</span> <span class="o">=</span> <span class="n">configparser</span><span class="p">.</span><span class="n">ConfigParser</span><span class="p">(</span><span class="n">interpolation</span> <span class="o">=</span> <span class="bp">None</span><span class="p">)</span>
            <span class="n">cp</span><span class="p">.</span><span class="n">read_string</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">sect</span> <span class="ow">in</span> <span class="n">cp</span><span class="p">.</span><span class="n">sections</span><span class="p">():</span>
            <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">val</span> <span class="ow">in</span> <span class="n">cp</span><span class="p">.</span><span class="n">items</span><span class="p">(</span><span class="n">sect</span><span class="p">):</span>
                <span class="n">lowsect</span><span class="p">,</span> <span class="n">lowkey</span> <span class="o">=</span> <span class="n">sect</span><span class="p">.</span><span class="n">lower</span><span class="p">(),</span> <span class="n">key</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span>
                <span class="n">config</span><span class="p">.</span><span class="n">setdefault</span><span class="p">(</span><span class="n">lowsect</span><span class="p">,</span> <span class="p">{})[</span><span class="n">lowkey</span><span class="p">]</span> <span class="o">=</span> <span class="n">val</span>
        <span class="k">if</span> <span class="s">'default'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">config</span><span class="p">:</span>
            <span class="n">config</span><span class="p">[</span><span class="s">'default'</span><span class="p">]</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">return</span> <span class="n">config</span>

    <span class="k">def</span> <span class="nf">_load_config</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_config</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">ininame</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">expanduser</span><span class="p">(</span><span class="s">'~/.config/translator/config.ini'</span><span class="p">)</span>
        <span class="n">config</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">__load_ini</span><span class="p">(</span><span class="n">ininame</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">config</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">False</span>
        <span class="k">for</span> <span class="n">section</span> <span class="ow">in</span> <span class="p">(</span><span class="s">'default'</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
            <span class="n">items</span> <span class="o">=</span> <span class="n">config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">section</span><span class="p">,</span> <span class="p">{})</span>
            <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">items</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="n">key</span><span class="p">]</span> <span class="o">=</span> <span class="n">items</span><span class="p">[</span><span class="n">key</span><span class="p">]</span>
        <span class="k">return</span> <span class="bp">True</span>

    <span class="k">def</span> <span class="nf">_check_proxy</span> <span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">proxy</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">environ</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'all_proxy'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">proxy</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">False</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">proxy</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
            <span class="k">return</span> <span class="bp">False</span>
        <span class="k">if</span> <span class="s">'proxy'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="s">'proxy'</span><span class="p">]</span> <span class="o">=</span> <span class="n">proxy</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span>
        <span class="k">return</span> <span class="bp">True</span>

    <span class="k">def</span> <span class="nf">request</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">post</span> <span class="o">=</span> <span class="bp">False</span><span class="p">,</span> <span class="n">header</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="kn">import</span> <span class="nn">requests</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="p">.</span><span class="n">_session</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">_session</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">Session</span><span class="p">()</span>
        <span class="n">argv</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">if</span> <span class="n">header</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
            <span class="n">header</span> <span class="o">=</span> <span class="n">copy</span><span class="p">.</span><span class="n">deepcopy</span><span class="p">(</span><span class="n">header</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">header</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span><span class="p">:</span>
            <span class="n">header</span><span class="p">[</span><span class="s">'User-Agent'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span>
        <span class="n">argv</span><span class="p">[</span><span class="s">'headers'</span><span class="p">]</span> <span class="o">=</span> <span class="n">header</span>
        <span class="n">timeout</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'timeout'</span><span class="p">,</span> <span class="mi">7</span><span class="p">)</span>
        <span class="n">proxy</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'proxy'</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">timeout</span><span class="p">:</span>
            <span class="n">argv</span><span class="p">[</span><span class="s">'timeout'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="n">timeout</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">proxy</span><span class="p">:</span>
            <span class="n">proxies</span> <span class="o">=</span> <span class="p">{</span><span class="s">'http'</span><span class="p">:</span> <span class="n">proxy</span><span class="p">,</span> <span class="s">'https'</span><span class="p">:</span> <span class="n">proxy</span><span class="p">}</span>
            <span class="n">argv</span><span class="p">[</span><span class="s">'proxies'</span><span class="p">]</span> <span class="o">=</span> <span class="n">proxies</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">post</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
                <span class="n">argv</span><span class="p">[</span><span class="s">'params'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">data</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
                <span class="n">argv</span><span class="p">[</span><span class="s">'data'</span><span class="p">]</span> <span class="o">=</span> <span class="n">data</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">post</span><span class="p">:</span>
            <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_session</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_session</span><span class="p">.</span><span class="n">post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">r</span>

    <span class="k">def</span> <span class="nf">http_get</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">header</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="bp">False</span><span class="p">,</span> <span class="n">header</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">http_post</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">header</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="bp">True</span><span class="p">,</span> <span class="n">header</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">url_unquote</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">plus</span> <span class="o">=</span> <span class="bp">True</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
            <span class="kn">import</span> <span class="nn">urllib</span>
            <span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
                <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">unquote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">unquote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="kn">import</span> <span class="nn">urllib.parse</span>
        <span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">unquote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">unquote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">url_quote</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">plus</span> <span class="o">=</span> <span class="bp">True</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
            <span class="kn">import</span> <span class="nn">urllib</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>    <span class="c1"># noqa: F821
</span>                <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">,</span> <span class="s">'ignore'</span><span class="p">)</span>
            <span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
                <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">quote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">urlparse</span><span class="p">.</span><span class="n">quote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>   <span class="c1"># noqa: F821
</span>        <span class="kn">import</span> <span class="nn">urllib.parse</span>
        <span class="k">if</span> <span class="n">plus</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">quote_plus</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">urllib</span><span class="p">.</span><span class="n">parse</span><span class="p">.</span><span class="n">quote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">create_translation</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">None</span><span class="p">,</span> <span class="n">text</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
        <span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'engine'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_name</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'sl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sl</span>              <span class="c1"># Êù•Ê∫êËØ≠Ë®Ä
</span>        <span class="n">res</span><span class="p">[</span><span class="s">'tl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tl</span>              <span class="c1"># ÁõÆÊ†áËØ≠Ë®Ä
</span>        <span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>          <span class="c1"># ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨
</span>        <span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>      <span class="c1"># Èü≥Ê†á
</span>        <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>    <span class="c1"># ÁÆÄÂçïÈáä‰πâ
</span>        <span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>       <span class="c1"># ÂàÜË°åËß£Èáä
</span>        <span class="k">return</span> <span class="n">res</span>

    <span class="c1"># ÁøªËØëÁªìÊûúÔºöÈúÄË¶ÅÂ°´ÂÖÖÂ¶Ç‰∏ãÂ≠óÊÆµ
</span>    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>

    <span class="c1"># ÊòØÂê¶ÊòØËã±Êñá
</span>    <span class="k">def</span> <span class="nf">check_english</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">ch</span> <span class="ow">in</span> <span class="n">text</span><span class="p">:</span>
            <span class="k">if</span> <span class="nb">ord</span><span class="p">(</span><span class="n">ch</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">128</span><span class="p">:</span>
                <span class="k">return</span> <span class="bp">False</span>
        <span class="k">return</span> <span class="bp">True</span>

    <span class="c1"># ÁåúÊµãËØ≠Ë®Ä
</span>    <span class="k">def</span> <span class="nf">guess_language</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="k">if</span> <span class="p">((</span><span class="ow">not</span> <span class="n">sl</span><span class="p">)</span> <span class="ow">or</span> <span class="n">sl</span> <span class="o">==</span> <span class="s">'auto'</span><span class="p">)</span> <span class="ow">and</span> <span class="p">((</span><span class="ow">not</span> <span class="n">tl</span><span class="p">)</span> <span class="ow">or</span> <span class="n">tl</span> <span class="o">==</span> <span class="s">'auto'</span><span class="p">):</span>
            <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">check_english</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
                <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="p">(</span><span class="s">'en-US'</span><span class="p">,</span> <span class="s">'zh-CN'</span><span class="p">)</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="p">(</span><span class="s">'zh-CN'</span><span class="p">,</span> <span class="s">'en-US'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">sl</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">langmap</span><span class="p">:</span>
            <span class="n">sl</span> <span class="o">=</span> <span class="n">langmap</span><span class="p">[</span><span class="n">sl</span><span class="p">.</span><span class="n">lower</span><span class="p">()]</span>
        <span class="k">if</span> <span class="n">tl</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span> <span class="ow">in</span> <span class="n">langmap</span><span class="p">:</span>
            <span class="n">tl</span> <span class="o">=</span> <span class="n">langmap</span><span class="p">[</span><span class="n">tl</span><span class="p">.</span><span class="n">lower</span><span class="p">()]</span>
        <span class="k">return</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span>
    
    <span class="k">def</span> <span class="nf">md5sum</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="kn">import</span> <span class="nn">hashlib</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">md5</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">sys</span><span class="p">.</span><span class="n">version_info</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span>   <span class="c1"># noqa: F821
</span>                <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span>
                <span class="n">text</span> <span class="o">=</span> <span class="n">text</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">)</span>
        <span class="n">m</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">m</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span>


<span class="c1">#----------------------------------------------------------------------
# Azure Translator
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">AzureTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">AzureTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'azure'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">if</span> <span class="s">'apikey'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">:</span>
            <span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'error: missing apikey in [azure] section</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
            <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">apikey</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="s">'apikey'</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="kn">import</span> <span class="nn">uuid</span>
        <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">qs</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">sl</span><span class="p">)</span>
        <span class="n">qt</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">tl</span><span class="p">)</span>
        <span class="n">url</span> <span class="o">=</span> <span class="s">'https://api.cognitive.microsofttranslator.com/translate'</span>
        <span class="n">url</span> <span class="o">+=</span> <span class="s">'?api-version=3.0&amp;from={}&amp;to={}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">qs</span><span class="p">,</span> <span class="n">qt</span><span class="p">)</span>
        <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">'Ocp-Apim-Subscription-Key'</span><span class="p">:</span> <span class="bp">self</span><span class="p">.</span><span class="n">apikey</span><span class="p">,</span>
            <span class="s">'Content-type'</span><span class="p">:</span> <span class="s">'application/json'</span><span class="p">,</span>
            <span class="s">'X-ClientTraceId'</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">uuid</span><span class="p">.</span><span class="n">uuid4</span><span class="p">())</span>
        <span class="p">}</span>
        <span class="n">body</span> <span class="o">=</span> <span class="p">[{</span><span class="s">'text'</span><span class="p">:</span> <span class="n">text</span><span class="p">}]</span>
        <span class="kn">import</span> <span class="nn">json</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">json</span><span class="p">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">body</span><span class="p">),</span> <span class="n">headers</span><span class="p">).</span><span class="n">json</span><span class="p">()</span>
        <span class="c1"># print(resp)
</span>        <span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'sl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sl</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'tl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tl</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'translation'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">render</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'html'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'xterm'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="k">return</span> <span class="n">res</span>

    <span class="k">def</span> <span class="nf">render</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">resp</span><span class="p">:</span>
            <span class="k">return</span> <span class="s">''</span>
        <span class="n">x</span> <span class="o">=</span> <span class="n">resp</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">x</span><span class="p">:</span>
            <span class="k">return</span> <span class="s">''</span>
        <span class="n">y</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="s">'translations'</span><span class="p">]</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">y</span><span class="p">:</span>
            <span class="k">return</span> <span class="s">''</span>
        <span class="n">output</span> <span class="o">=</span> <span class="s">''</span>
        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">y</span><span class="p">:</span>
            <span class="n">output</span> <span class="o">+=</span> <span class="n">item</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span>
        <span class="k">return</span> <span class="n">output</span>


<span class="c1">#----------------------------------------------------------------------
# Google Translator
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">GoogleTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">GoogleTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'google'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">=</span> <span class="s">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:59.0)'</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">+=</span> <span class="s">' Gecko/20100101 Firefox/59.0'</span>

    <span class="k">def</span> <span class="nf">get_url</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">qry</span><span class="p">):</span>
        <span class="n">http_host</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'host'</span><span class="p">,</span> <span class="s">'translate.googleapis.com'</span><span class="p">)</span>
        <span class="n">qry</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">qry</span><span class="p">)</span>
        <span class="n">url</span> <span class="o">=</span> <span class="s">'https://{}/translate_a/single?client=gtx&amp;sl={}&amp;tl={}&amp;dt=at&amp;dt=bd&amp;dt=ex&amp;'</span> \
              <span class="s">'dt=ld&amp;dt=md&amp;dt=qca&amp;dt=rw&amp;dt=rm&amp;dt=ss&amp;dt=t&amp;q={}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span>
                      <span class="n">http_host</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">qry</span><span class="p">)</span>    <span class="c1"># noqa: E216
</span>        <span class="k">return</span> <span class="n">url</span>

    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">url</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_url</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">r</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">obj</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="c1"># pprint.pprint(obj)
</span>        <span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_phonetic</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_definition</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_explain</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'detail'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_detail</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'alternative'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_alternative</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">res</span>

    <span class="k">def</span> <span class="nf">get_phonetic</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="mi">4</span><span class="p">:</span>
                <span class="k">return</span> <span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span>
        <span class="k">return</span> <span class="bp">None</span>

    <span class="k">def</span> <span class="nf">get_definition</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
        <span class="n">paraphrase</span> <span class="o">=</span> <span class="s">''</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
            <span class="k">if</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]:</span>
                <span class="n">paraphrase</span> <span class="o">+=</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">paraphrase</span>

    <span class="k">def</span> <span class="nf">get_explain</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
        <span class="n">explain</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">if</span> <span class="n">obj</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
            <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
                <span class="n">expl</span> <span class="o">=</span> <span class="s">'[{}] '</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
                <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
                    <span class="n">expl</span> <span class="o">+=</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="s">';'</span>
                <span class="n">explain</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">expl</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">explain</span>

    <span class="k">def</span> <span class="nf">get_detail</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
        <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">13</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="mi">12</span><span class="p">]:</span>
            <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'[{}]'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
            <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]:</span>
                <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'- {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">y</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="p">:</span>
                    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'  * {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">y</span><span class="p">[</span><span class="mi">2</span><span class="p">]))</span>
        <span class="k">return</span> <span class="n">result</span>

    <span class="k">def</span> <span class="nf">get_alternative</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
        <span class="n">definition</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_definition</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
        <span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="mi">5</span><span class="p">]:</span>
            <span class="c1"># result.append('- {}'.format(x[0]))
</span>            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]:</span>
                <span class="k">if</span> <span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="n">definition</span><span class="p">:</span>
                    <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">' * {}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
        <span class="k">return</span> <span class="n">result</span>



<span class="c1">#----------------------------------------------------------------------
# Youdao Translator
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">YoudaoTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">YoudaoTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'youdao'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">url</span> <span class="o">=</span> <span class="s">'https://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule'</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">D</span> <span class="o">=</span> <span class="s">"ebSeFb%=XZ%T[KZ)c(sy!"</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">D</span> <span class="o">=</span> <span class="s">"97_3(jkMYg@T[KZQmqjTK"</span>

    <span class="k">def</span> <span class="nf">get_md5</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="kn">import</span> <span class="nn">hashlib</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">hashlib</span><span class="p">.</span><span class="n">md5</span><span class="p">()</span>
        <span class="c1"># m.update(value)
</span>        <span class="n">m</span><span class="p">.</span><span class="n">update</span><span class="p">(</span><span class="n">value</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">'utf-8'</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">m</span><span class="p">.</span><span class="n">hexdigest</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">sign</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">salt</span><span class="p">):</span>
        <span class="n">s</span> <span class="o">=</span> <span class="s">"fanyideskweb"</span> <span class="o">+</span> <span class="n">text</span> <span class="o">+</span> <span class="n">salt</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">D</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_md5</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">salt</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">)</span> <span class="o">+</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
        <span class="n">sign</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">sign</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">salt</span><span class="p">)</span>
        <span class="n">header</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">'Cookie'</span><span class="p">:</span> <span class="s">'OUTFOX_SEARCH_USER_ID=-2022895048@10.168.8.76;'</span><span class="p">,</span>
            <span class="s">'Referer'</span><span class="p">:</span> <span class="s">'http://fanyi.youdao.com/'</span><span class="p">,</span>
            <span class="s">'User-Agent'</span><span class="p">:</span> <span class="s">'Mozilla/5.0 (Windows NT 6.2; rv:51.0) Gecko/20100101 Firefox/51.0'</span><span class="p">,</span>
        <span class="p">}</span>
        <span class="n">data</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">'i'</span><span class="p">:</span> <span class="n">text</span><span class="p">,</span>
            <span class="s">'from'</span><span class="p">:</span> <span class="n">sl</span><span class="p">,</span>
            <span class="s">'to'</span><span class="p">:</span> <span class="n">tl</span><span class="p">,</span> 
            <span class="s">'smartresult'</span><span class="p">:</span> <span class="s">'dict'</span><span class="p">,</span>
            <span class="s">'client'</span><span class="p">:</span> <span class="s">'fanyideskweb'</span><span class="p">,</span>
            <span class="s">'salt'</span><span class="p">:</span> <span class="n">salt</span><span class="p">,</span>
            <span class="s">'sign'</span><span class="p">:</span> <span class="n">sign</span><span class="p">,</span>
            <span class="s">'doctype'</span><span class="p">:</span> <span class="s">'json'</span><span class="p">,</span>
            <span class="s">'version'</span><span class="p">:</span> <span class="s">'2.1'</span><span class="p">,</span>
            <span class="s">'keyfrom'</span><span class="p">:</span> <span class="s">'fanyi.web'</span><span class="p">,</span>
            <span class="s">'action'</span><span class="p">:</span> <span class="s">'FY_BY_CL1CKBUTTON'</span><span class="p">,</span>
            <span class="s">'typoResult'</span><span class="p">:</span> <span class="s">'true'</span>
        <span class="p">}</span>
        <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_post</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="p">,</span> <span class="n">header</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">r</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">obj</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="c1"># pprint.pprint(obj)
</span>        <span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_definition</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_explain</span><span class="p">(</span><span class="n">obj</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">res</span>

    <span class="k">def</span> <span class="nf">get_definition</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
        <span class="n">translation</span> <span class="o">=</span> <span class="s">''</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">obj</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'translateResult'</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">t</span><span class="p">:</span>
            <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">t</span><span class="p">:</span>
                <span class="n">part</span> <span class="o">=</span> <span class="p">[]</span>
                <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">n</span><span class="p">:</span>
                    <span class="n">x</span> <span class="o">=</span> <span class="n">m</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'tgt'</span><span class="p">)</span>
                    <span class="k">if</span> <span class="n">x</span><span class="p">:</span>
                        <span class="n">part</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
                <span class="k">if</span> <span class="n">part</span><span class="p">:</span>
                    <span class="n">translation</span> <span class="o">+=</span> <span class="s">', '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">part</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">translation</span>

    <span class="k">def</span> <span class="nf">get_explain</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">obj</span><span class="p">):</span>
        <span class="n">explain</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">if</span> <span class="s">'smartResult'</span> <span class="ow">in</span> <span class="n">obj</span><span class="p">:</span>
            <span class="n">smarts</span> <span class="o">=</span> <span class="n">obj</span><span class="p">[</span><span class="s">'smartResult'</span><span class="p">][</span><span class="s">'entries'</span><span class="p">]</span>
            <span class="k">for</span> <span class="n">entry</span> <span class="ow">in</span> <span class="n">smarts</span><span class="p">:</span>
                <span class="k">if</span> <span class="n">entry</span><span class="p">:</span>
                    <span class="n">entry</span> <span class="o">=</span> <span class="n">entry</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'</span><span class="se">\r</span><span class="s">'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
                    <span class="n">entry</span> <span class="o">=</span> <span class="n">entry</span><span class="p">.</span><span class="n">replace</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
                    <span class="n">explain</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">explain</span>


<span class="c1">#----------------------------------------------------------------------
# Bing2: ÂÖçË¥π web Êé•Âè£ÔºåÂè™ËÉΩÊü•ÂçïËØç
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">BingDict</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">BingDict</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'bingdict'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">=</span> <span class="s">'Mozilla/5.0 (X11; Linux x86_64; rv:50.0) Gecko/20100101'</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_agent</span> <span class="o">+=</span> <span class="s">' Firefox/50.0'</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_url</span> <span class="o">=</span> <span class="s">'http://bing.com/dict/SerpHoverTrans'</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">_cnurl</span> <span class="o">=</span> <span class="s">'http://cn.bing.com/dict/SerpHoverTrans'</span>

    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="n">url</span> <span class="o">=</span> <span class="p">(</span><span class="s">'zh'</span> <span class="ow">in</span> <span class="n">tl</span><span class="p">)</span> <span class="ow">and</span> <span class="bp">self</span><span class="p">.</span><span class="n">_cnurl</span> <span class="ow">or</span> <span class="bp">self</span><span class="p">.</span><span class="n">_url</span>
        <span class="n">url</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_cnurl</span>
        <span class="n">url</span> <span class="o">=</span> <span class="n">url</span> <span class="o">+</span> <span class="s">'?q='</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">url_quote</span><span class="p">(</span><span class="n">text</span><span class="p">)</span>
        <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
            <span class="c1"># 'Host': 'cn.bing.com',
</span>            <span class="s">'Accept'</span><span class="p">:</span> <span class="s">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class="p">,</span>
            <span class="s">'Accept-Language'</span><span class="p">:</span> <span class="s">'en-US,en;q=0.5'</span><span class="p">,</span>
        <span class="p">}</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="bp">None</span><span class="p">,</span> <span class="n">headers</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">resp</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">resp</span><span class="p">.</span><span class="n">text</span>
        <span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'sl'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'auto'</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'tl'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'auto'</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_phonetic</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">get_explain</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">res</span>

    <span class="k">def</span> <span class="nf">get_phonetic</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">html</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">html</span><span class="p">:</span>
            <span class="k">return</span> <span class="s">''</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span>
            <span class="s">r'&lt;span class="ht_attr" lang=".*?"&gt;\[(.*?)\] &lt;/span&gt;'</span><span class="p">,</span> <span class="n">html</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">m</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">return</span> <span class="n">m</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">strip</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">get_explain</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">html</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">html</span><span class="p">:</span>
            <span class="k">return</span> <span class="p">[]</span>
        <span class="n">m</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span>
            <span class="s">r'&lt;span class="ht_pos"&gt;(.*?)&lt;/span&gt;&lt;span class="ht_trs"&gt;(.*?)&lt;/span&gt;'</span><span class="p">,</span> <span class="n">html</span><span class="p">)</span>
        <span class="n">expls</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">m</span><span class="p">:</span>
            <span class="n">expls</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="s">'%s %s'</span> <span class="o">%</span> <span class="n">item</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">expls</span>



<span class="c1">#----------------------------------------------------------------------
# Baidu Translator
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">BaiduTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">BaiduTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'baidu'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">if</span> <span class="s">'apikey'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">:</span>
            <span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'error: missing apikey in [baidu] section</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
            <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">()</span>
        <span class="k">if</span> <span class="s">'secret'</span> <span class="ow">not</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">:</span>
            <span class="n">sys</span><span class="p">.</span><span class="n">stderr</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'error: missing secret in [baidu] section</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
            <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">apikey</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="s">'apikey'</span><span class="p">]</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">secret</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">_config</span><span class="p">[</span><span class="s">'secret'</span><span class="p">]</span>
        <span class="n">langmap</span> <span class="o">=</span> <span class="p">{</span>
            <span class="s">'zh-cn'</span><span class="p">:</span> <span class="s">'zh'</span><span class="p">,</span>
            <span class="s">'zh-chs'</span><span class="p">:</span> <span class="s">'zh'</span><span class="p">,</span>
            <span class="s">'zh-cht'</span><span class="p">:</span> <span class="s">'cht'</span><span class="p">,</span>
            <span class="s">'en-us'</span><span class="p">:</span> <span class="s">'en'</span><span class="p">,</span> 
            <span class="s">'en-gb'</span><span class="p">:</span> <span class="s">'en'</span><span class="p">,</span>
            <span class="s">'ja'</span><span class="p">:</span> <span class="s">'jp'</span><span class="p">,</span>
        <span class="p">}</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">langmap</span> <span class="o">=</span> <span class="n">langmap</span>

    <span class="k">def</span> <span class="nf">convert_lang</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">lang</span><span class="p">):</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">lang</span><span class="p">.</span><span class="n">lower</span><span class="p">()</span>
        <span class="k">if</span> <span class="n">t</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">langmap</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">langmap</span><span class="p">[</span><span class="n">t</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">lang</span>

    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">req</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'q'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'from'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">convert_lang</span><span class="p">(</span><span class="n">sl</span><span class="p">)</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'to'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">convert_lang</span><span class="p">(</span><span class="n">tl</span><span class="p">)</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'appid'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">apikey</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'salt'</span><span class="p">]</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span> <span class="o">*</span> <span class="mi">1000</span><span class="p">)</span> <span class="o">+</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">))</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'sign'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">sign</span><span class="p">(</span><span class="n">text</span><span class="p">,</span> <span class="n">req</span><span class="p">[</span><span class="s">'salt'</span><span class="p">])</span>
        <span class="n">url</span> <span class="o">=</span> <span class="s">"https://fanyi-api.baidu.com/api/trans/vip/translate"</span>
        <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_post</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">req</span><span class="p">)</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
        <span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'sl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sl</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'tl'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tl</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'info'</span><span class="p">]</span> <span class="o">=</span> <span class="n">resp</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'translation'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">render</span><span class="p">(</span><span class="n">resp</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'html'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'xterm'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">None</span>
        <span class="k">return</span> <span class="n">res</span>

    <span class="k">def</span> <span class="nf">sign</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">salt</span><span class="p">):</span>
        <span class="n">t</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">apikey</span> <span class="o">+</span> <span class="n">text</span> <span class="o">+</span> <span class="n">salt</span> <span class="o">+</span> <span class="bp">self</span><span class="p">.</span><span class="n">secret</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">md5sum</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">render</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">resp</span><span class="p">):</span>
        <span class="n">output</span> <span class="o">=</span> <span class="s">''</span>
        <span class="n">result</span> <span class="o">=</span> <span class="n">resp</span><span class="p">[</span><span class="s">'trans_result'</span><span class="p">]</span>
        <span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
            <span class="n">output</span> <span class="o">+=</span> <span class="s">''</span> <span class="o">+</span> <span class="n">item</span><span class="p">[</span><span class="s">'src'</span><span class="p">]</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span>
            <span class="n">output</span> <span class="o">+=</span> <span class="s">' * '</span> <span class="o">+</span> <span class="n">item</span><span class="p">[</span><span class="s">'dst'</span><span class="p">]</span> <span class="o">+</span> <span class="s">'</span><span class="se">\n</span><span class="s">'</span>
        <span class="k">return</span> <span class="n">output</span>


<span class="c1">#----------------------------------------------------------------------
# ËØçÈú∏
#----------------------------------------------------------------------
</span><span class="k">class</span> <span class="nc">CibaTranslator</span> <span class="p">(</span><span class="n">BasicTranslator</span><span class="p">):</span>

    <span class="k">def</span> <span class="nf">__init__</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">):</span>
        <span class="nb">super</span><span class="p">(</span><span class="n">CibaTranslator</span><span class="p">,</span> <span class="bp">self</span><span class="p">).</span><span class="n">__init__</span><span class="p">(</span><span class="s">'ciba'</span><span class="p">,</span> <span class="o">**</span><span class="n">argv</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">translate</span> <span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">):</span>
        <span class="n">sl</span><span class="p">,</span> <span class="n">tl</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">guess_language</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">url</span> <span class="o">=</span> <span class="s">'https://fy.iciba.com/ajax.php'</span>
        <span class="n">req</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'a'</span><span class="p">]</span> <span class="o">=</span> <span class="s">'fy'</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'f'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sl</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'t'</span><span class="p">]</span> <span class="o">=</span> <span class="n">tl</span>
        <span class="n">req</span><span class="p">[</span><span class="s">'w'</span><span class="p">]</span> <span class="o">=</span> <span class="n">text</span>
        <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">http_get</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">req</span><span class="p">,</span> <span class="bp">None</span><span class="p">)</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">r</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">resp</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="n">resp</span> <span class="o">=</span> <span class="n">r</span><span class="p">.</span><span class="n">json</span><span class="p">()</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="n">resp</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">None</span>
        <span class="n">res</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">create_translation</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
        <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="s">''</span>
        <span class="k">if</span> <span class="s">'content'</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">:</span>
            <span class="k">if</span> <span class="s">'out'</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="s">'content'</span><span class="p">]:</span>
                <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span> <span class="o">=</span> <span class="n">resp</span><span class="p">[</span><span class="s">'content'</span><span class="p">][</span><span class="s">'out'</span><span class="p">]</span> <span class="ow">or</span> <span class="s">''</span>
            <span class="k">if</span> <span class="s">'ph_en'</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="s">'content'</span><span class="p">]:</span>
                <span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">=</span> <span class="n">resp</span><span class="p">[</span><span class="s">'content'</span><span class="p">][</span><span class="s">'ph_en'</span><span class="p">]</span> <span class="ow">or</span> <span class="s">''</span>
            <span class="k">if</span> <span class="s">'word_mean'</span> <span class="ow">in</span> <span class="n">resp</span><span class="p">[</span><span class="s">'content'</span><span class="p">]:</span>
                <span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]</span> <span class="o">=</span> <span class="n">resp</span><span class="p">[</span><span class="s">'content'</span><span class="p">][</span><span class="s">'word_mean'</span><span class="p">]</span> <span class="ow">or</span> <span class="s">''</span>
        <span class="k">return</span> <span class="n">res</span>


<span class="c1">#----------------------------------------------------------------------
# ÂàÜÊûêÂëΩ‰ª§Ë°åÂèÇÊï∞
#----------------------------------------------------------------------
</span><span class="k">def</span> <span class="nf">getopt</span> <span class="p">(</span><span class="n">argv</span><span class="p">):</span>
    <span class="n">args</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">options</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">if</span> <span class="n">argv</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">argv</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span>
    <span class="n">index</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">count</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span>
    <span class="k">while</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">:</span>
        <span class="n">arg</span> <span class="o">=</span> <span class="n">argv</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">arg</span> <span class="o">!=</span> <span class="s">''</span><span class="p">:</span>
            <span class="n">head</span> <span class="o">=</span> <span class="n">arg</span><span class="p">[:</span><span class="mi">1</span><span class="p">]</span>
            <span class="k">if</span> <span class="n">head</span> <span class="o">!=</span> <span class="s">'-'</span><span class="p">:</span>
                <span class="k">break</span>
            <span class="k">if</span> <span class="n">arg</span> <span class="o">==</span> <span class="s">'-'</span><span class="p">:</span>
                <span class="k">break</span>
            <span class="n">name</span> <span class="o">=</span> <span class="n">arg</span><span class="p">.</span><span class="n">lstrip</span><span class="p">(</span><span class="s">'-'</span><span class="p">)</span>
            <span class="n">key</span><span class="p">,</span> <span class="n">_</span><span class="p">,</span> <span class="n">val</span> <span class="o">=</span> <span class="n">name</span><span class="p">.</span><span class="n">partition</span><span class="p">(</span><span class="s">'='</span><span class="p">)</span>
            <span class="n">options</span><span class="p">[</span><span class="n">key</span><span class="p">.</span><span class="n">strip</span><span class="p">()]</span> <span class="o">=</span> <span class="n">val</span><span class="p">.</span><span class="n">strip</span><span class="p">()</span>
        <span class="n">index</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">while</span> <span class="n">index</span> <span class="o">&lt;</span> <span class="n">count</span><span class="p">:</span>
        <span class="n">args</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="n">index</span><span class="p">])</span>
        <span class="n">index</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">options</span><span class="p">,</span> <span class="n">args</span>


<span class="c1">#----------------------------------------------------------------------
# ÂºïÊìéÊ≥®ÂÜå
#----------------------------------------------------------------------
</span><span class="n">ENGINES</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'google'</span><span class="p">:</span> <span class="n">GoogleTranslator</span><span class="p">,</span>
    <span class="s">'azure'</span><span class="p">:</span> <span class="n">AzureTranslator</span><span class="p">,</span>
    <span class="s">'baidu'</span><span class="p">:</span> <span class="n">BaiduTranslator</span><span class="p">,</span>
    <span class="s">'youdao'</span><span class="p">:</span> <span class="n">YoudaoTranslator</span><span class="p">,</span>
    <span class="s">'bing'</span><span class="p">:</span> <span class="n">BingDict</span><span class="p">,</span>
    <span class="s">'ciba'</span><span class="p">:</span> <span class="n">CibaTranslator</span><span class="p">,</span>
<span class="p">}</span>


<span class="c1">#----------------------------------------------------------------------
# ‰∏ªÁ®ãÂ∫è
#----------------------------------------------------------------------
</span><span class="k">def</span> <span class="nf">main</span><span class="p">(</span><span class="n">argv</span> <span class="o">=</span> <span class="bp">None</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">argv</span> <span class="ow">is</span> <span class="bp">None</span><span class="p">:</span>
        <span class="n">argv</span> <span class="o">=</span> <span class="n">sys</span><span class="p">.</span><span class="n">argv</span>
    <span class="n">argv</span> <span class="o">=</span> <span class="p">[</span> <span class="n">n</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">argv</span> <span class="p">]</span>
    <span class="n">options</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="n">getopt</span><span class="p">(</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">:])</span>
    <span class="n">engine</span> <span class="o">=</span> <span class="n">options</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'engine'</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">engine</span><span class="p">:</span>
        <span class="n">engine</span> <span class="o">=</span> <span class="s">'google'</span>
    <span class="n">sl</span> <span class="o">=</span> <span class="n">options</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'from'</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">sl</span><span class="p">:</span>
        <span class="n">sl</span> <span class="o">=</span> <span class="s">'auto'</span>
    <span class="n">tl</span> <span class="o">=</span> <span class="n">options</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="s">'to'</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">tl</span><span class="p">:</span>
        <span class="n">tl</span> <span class="o">=</span> <span class="s">'auto'</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">args</span><span class="p">:</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="s">'usage: translator.py {--engine=xx} {--from=xx} {--to=xx}'</span>
        <span class="k">print</span><span class="p">(</span><span class="n">msg</span> <span class="o">+</span> <span class="s">' {-json} text'</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'engines:'</span><span class="p">,</span> <span class="nb">list</span><span class="p">(</span><span class="n">ENGINES</span><span class="p">.</span><span class="n">keys</span><span class="p">()))</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="n">text</span> <span class="o">=</span> <span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">args</span><span class="p">)</span>
    <span class="n">cls</span> <span class="o">=</span> <span class="n">ENGINES</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">engine</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">cls</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'bad engine name: '</span> <span class="o">+</span> <span class="n">engine</span><span class="p">)</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span>
    <span class="n">translator</span> <span class="o">=</span> <span class="n">cls</span><span class="p">()</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">translator</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
    <span class="k">if</span> <span class="s">'json'</span> <span class="ow">in</span> <span class="n">options</span><span class="p">:</span>
        <span class="n">text</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">dumps</span><span class="p">(</span><span class="n">res</span><span class="p">)</span>
        <span class="n">sys</span><span class="p">.</span><span class="n">stdout</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">text</span><span class="p">))</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">return</span> <span class="o">-</span><span class="mi">2</span>
    <span class="k">if</span> <span class="s">'text'</span> <span class="ow">in</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">]:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="s">'text'</span><span class="p">])</span>
    <span class="k">if</span> <span class="s">'phonetic'</span> <span class="ow">in</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="ow">and</span> <span class="p">(</span><span class="s">'phonetic'</span> <span class="ow">in</span> <span class="n">options</span><span class="p">):</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'['</span> <span class="o">+</span> <span class="n">res</span><span class="p">[</span><span class="s">'phonetic'</span><span class="p">]</span> <span class="o">+</span> <span class="s">']'</span><span class="p">)</span>
    <span class="k">if</span> <span class="s">'definition'</span> <span class="ow">in</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">])</span>
    <span class="k">if</span> <span class="s">'explain'</span> <span class="ow">in</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="s">'explain'</span><span class="p">]))</span>
    <span class="k">elif</span> <span class="s">'translation'</span> <span class="ow">in</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">res</span><span class="p">[</span><span class="s">'translation'</span><span class="p">]:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="s">'translation'</span><span class="p">])</span>
    <span class="k">if</span> <span class="s">'alternative'</span> <span class="ow">in</span> <span class="n">res</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">res</span><span class="p">[</span><span class="s">'alternative'</span><span class="p">]:</span>
            <span class="k">print</span><span class="p">(</span><span class="s">'</span><span class="se">\n</span><span class="s">'</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">res</span><span class="p">[</span><span class="s">'alternative'</span><span class="p">]))</span>
    <span class="k">return</span> <span class="mi">0</span>

<span class="k">def</span> <span class="nf">trans_zh2en</span><span class="p">(</span><span class="n">text</span><span class="p">):</span>
    <span class="n">engine</span> <span class="o">=</span> <span class="s">'youdao'</span>
    <span class="n">sl</span> <span class="o">=</span> <span class="s">'zh'</span>
    <span class="n">tl</span> <span class="o">=</span> <span class="s">'en'</span>
    <span class="n">cls</span> <span class="o">=</span> <span class="n">ENGINES</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">engine</span><span class="p">)</span>
    <span class="n">translator</span> <span class="o">=</span> <span class="n">cls</span><span class="p">()</span>
    <span class="n">res</span> <span class="o">=</span> <span class="n">translator</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="n">sl</span><span class="p">,</span> <span class="n">tl</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">res</span><span class="p">[</span><span class="s">'definition'</span><span class="p">]</span>


<span class="c1">#----------------------------------------------------------------------
# testing suit
#----------------------------------------------------------------------
</span><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">test1</span><span class="p">():</span>
        <span class="n">bt</span> <span class="o">=</span> <span class="n">BasicTranslator</span><span class="p">(</span><span class="s">'test'</span><span class="p">)</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">bt</span><span class="p">.</span><span class="n">request</span><span class="p">(</span><span class="s">"http://www.baidu.com"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="k">def</span> <span class="nf">test2</span><span class="p">():</span>
        <span class="n">gt</span> <span class="o">=</span> <span class="n">GoogleTranslator</span><span class="p">()</span>
        <span class="c1"># r = gt.translate('auto', 'auto', 'Hello, World !!')
</span>        <span class="c1"># r = gt.translate('auto', 'auto', '‰Ω†ÂêÉÈ•≠‰∫ÜÊ≤°Êúâ?')
</span>        <span class="c1"># r = gt.translate('auto', 'auto', 'Èïø')
</span>        <span class="n">r</span> <span class="o">=</span> <span class="n">gt</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="s">'auto'</span><span class="p">,</span> <span class="s">'auto'</span><span class="p">,</span> <span class="s">'long'</span><span class="p">)</span>
        <span class="c1"># r = gt.translate('auto', 'auto', 'kiss')
</span>        <span class="c1"># r = gt.translate('auto', 'auto', '‰∫≤Âêª')
</span>        <span class="kn">import</span> <span class="nn">pprint</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="s">'translation'</span><span class="p">])</span>
        <span class="c1"># pprint.pprint(r['info'])
</span>        <span class="k">return</span> <span class="mi">0</span>
    <span class="k">def</span> <span class="nf">test3</span><span class="p">():</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">YoudaoTranslator</span><span class="p">()</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="s">'auto'</span><span class="p">,</span> <span class="s">'auto'</span><span class="p">,</span> <span class="s">'kiss'</span><span class="p">)</span>
        <span class="kn">import</span> <span class="nn">pprint</span>
        <span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="s">'translation'</span><span class="p">])</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="k">def</span> <span class="nf">test4</span><span class="p">():</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">AzureTranslator</span><span class="p">()</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="s">''</span><span class="p">,</span> <span class="s">'japanese'</span><span class="p">,</span> <span class="s">'ÂêÉÈ•≠Ê≤°ÊúâÔºü'</span><span class="p">)</span>
        <span class="c1"># print(r['info'])
</span>        <span class="c1"># print()
</span>        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="s">'translation'</span><span class="p">])</span>
    <span class="k">def</span> <span class="nf">test5</span><span class="p">():</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">BaiduTranslator</span><span class="p">()</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="s">''</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">'ÂêÉÈ•≠‰∫ÜÊ≤°Êúâ?'</span><span class="p">)</span>
        <span class="kn">import</span> <span class="nn">pprint</span>
        <span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="s">'translation'</span><span class="p">])</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="k">def</span> <span class="nf">test6</span><span class="p">():</span>
        <span class="n">t</span> <span class="o">=</span> <span class="n">CibaTranslator</span><span class="p">()</span>
        <span class="n">r</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="s">''</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">'ÂêÉÈ•≠Ê≤°ÊúâÔºü'</span><span class="p">)</span>
        <span class="c1"># print(r['info'])
</span>        <span class="c1"># print()
</span>        <span class="k">print</span><span class="p">(</span><span class="n">r</span><span class="p">[</span><span class="s">'translation'</span><span class="p">])</span>
    <span class="k">def</span> <span class="nf">test7</span><span class="p">():</span>
        <span class="c1"># t = CibaTranslator()
</span>        <span class="n">t</span> <span class="o">=</span> <span class="n">GoogleTranslator</span><span class="p">()</span>
        <span class="c1"># t = YoudaoTranslator()
</span>        <span class="c1"># t = BingDict()
</span>        <span class="c1"># r = t.translate('zh', 'en', 'ÂêÉÈ•≠‰∫ÜÊ≤°ÊúâÔºü')
</span>        <span class="c1"># r = t.translate('', '', 'apple')
</span>        <span class="n">r</span> <span class="o">=</span> <span class="n">t</span><span class="p">.</span><span class="n">translate</span><span class="p">(</span><span class="s">''</span><span class="p">,</span> <span class="s">''</span><span class="p">,</span> <span class="s">'Ê≠£Âú®ÊµãËØïÁøªËØë‰∏ÄÊÆµËØù'</span><span class="p">)</span>
        <span class="n">pprint</span><span class="p">.</span><span class="n">pprint</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">test9</span><span class="p">():</span>
        <span class="n">argv</span> <span class="o">=</span> <span class="p">[</span><span class="s">''</span><span class="p">,</span> <span class="s">'Ê≠£Âú®ÊµãËØïÁøªËØë‰∏ÄÊÆµËØù'</span><span class="p">]</span>
        <span class="n">main</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'====='</span><span class="p">)</span>
        <span class="n">argv</span> <span class="o">=</span> <span class="p">[</span><span class="s">''</span><span class="p">,</span> <span class="s">'--engine=bing'</span><span class="p">,</span> <span class="s">'--sl=zh'</span><span class="p">,</span> <span class="s">'--tl=en'</span><span class="p">,</span> <span class="s">'Ê≠£Âú®ÊµãËØïÁøªËØë‰∏ÄÊÆµËØù'</span><span class="p">]</span>
        <span class="n">main</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="s">'====='</span><span class="p">)</span>
        <span class="n">argv</span> <span class="o">=</span> <span class="p">[</span><span class="s">''</span><span class="p">,</span> <span class="s">'--engine=bing'</span><span class="p">,</span> <span class="s">'--sl=zh'</span><span class="p">,</span> <span class="s">'--tl=en'</span><span class="p">,</span> <span class="s">'-json'</span><span class="p">,</span> <span class="s">'ËãπÊûú'</span><span class="p">]</span>
        <span class="n">main</span><span class="p">(</span><span class="n">argv</span><span class="p">)</span>
        <span class="k">return</span> <span class="mi">0</span>
    <span class="c1"># test9()
</span>    <span class="c1"># main()
</span>    <span class="n">re</span> <span class="o">=</span> <span class="n">trans_zh2en</span><span class="p">(</span><span class="s">'ÂæàÈ´òÂÖ¥ËßÅÂà∞‰Ω†ÔºÅ'</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">re</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="Âõõwipo">Âõõ„ÄÅWIPO</h2>

:ET