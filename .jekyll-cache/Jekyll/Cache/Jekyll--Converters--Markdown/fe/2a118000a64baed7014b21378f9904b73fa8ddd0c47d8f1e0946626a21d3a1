I" G<h1 id="为什么https比http更安全"><a href="https://www.ruanyifeng.com/blog/2016/06/dns.html"><strong>为什么HTTPS比HTTP更安全？</strong></a></h1>

<h3 id="前言">前言</h3>

<p>近几年，互联网发生着翻天覆地的变化，尤其是我们一直习以为常的HTTP协议，在逐渐的被HTTPS协议所取代，在浏览器、搜索引擎、CA机构、大型互联网企业的共同促进下，互联网迎来了“HTTPS加密时代”，HTTPS将在未来的几年内全面取代HTTP成为传输协议的主流。</p>

<p>读完本文，希望你能明白：</p>

<ul>
  <li>HTTP通信存在什么问题</li>
  <li>HTTPS如何改进HTTP存在那些问题</li>
  <li>HTTPS工作原理是什么</li>
</ul>

<p>想阅读更多优质文章请猛戳<a href="https://github.com/ljianshu/Blog">GitHub博客</a>，一年五十篇优质文章等着你！</p>

<h3 id="一什么是https">一、什么是HTTPS</h3>

<p>HTTPS是在HTTP上建立SSL加密层，并对传输数据进行加密，是HTTP协议的安全版。现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。</p>

<p>HTTPS主要作用是：</p>

<p>（1）对数据进行加密，并建立一个信息安全通道，来保证传输过程中的数据安全;</p>

<p>（2）对网站服务器进行真实身份认证。</p>

<p>我们经常会在Web的登录页面和购物结算界面等使用HTTPS通信。使用HTTPS通信时，不再用<code class="language-plaintext highlighter-rouge">http://</code>，而是改用<code class="language-plaintext highlighter-rouge">https://</code>。另外，当浏览器访问HTTPS通信有效的Web网站时，浏览器的地址栏内会出现一个带锁的标记。对HTTPS的显示方式会因浏览器的不同而有所改变。</p>

<p><a href="https://image.fundebug.com/2019-0424-0001.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57872ed14a784?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<h3 id="二为什么需要https">二、为什么需要HTTPS</h3>

<p>在HTTP协议中有可能存在信息窃取或身份伪装等安全问题。使用HTTPS通信机制可以有效地防止这些问题，接下来，我们先来了解下
HTTP协议存在的哪些问题：</p>

<ul>
  <li>通信使用明文（不加密），内容可能被窃听</li>
</ul>

<p>由于HTTP本身不具备加密的功能，所以也无法做到对通信整体（使用HTTP协议通信的请求和响应的内容）进行加密。即，<strong>HTTP报文使用明文（指未经过加密的报文）方式发送</strong>。</p>

<p>HTTP明文协议的缺陷是导致数据泄露、数据篡改、流量劫持、钓鱼攻击等安全问题的重要原因。HTTP协议无法加密数据，所有通信数据都在网络中明文“裸奔”。通过网络的嗅探设备及一些技术手段，就可还原HTTP报文内容。</p>

<ul>
  <li>无法证明报文的完整性，所以可能遭篡改</li>
</ul>

<p>所谓完整性是指信息的准确度。若无法证明其完整性，通常也就意味着无法判断信息是否准确。由于HTTP协议无法证明通信的报文完整性，因此，在请求或响应送出之后直到对方接收之前的这段时间内，即使请求或响应的内容遭到篡改，也没有办法获悉。
换句话说，<strong>没有任何办法确认，发出的请求/响应和接收到的请求/响应是前后相同的</strong>。</p>

<ul>
  <li>不验证通信方的身份，因此有可能遭遇伪装</li>
</ul>

<p><strong>HTTP协议中的请求和响应不会对通信方进行确认</strong>。在HTTP协议通信时，由于不存在确认通信方的处理步骤，任何人都可以发起请求。另外，服务器只要接收到请求，不管对方是谁都会返回一个响应（但也仅限于发送端的IP地址和端口号没有被Web服务器设定限制访问的前提下）</p>

<p>HTTP协议无法验证通信方身份，任何人都可以伪造虚假服务器欺骗用户，实现“钓鱼欺诈”，用户无法察觉。</p>

<p>反观HTTPS协议，它比HTTP协议相比多了以下优势（下文会详细介绍）:</p>

<ul>
  <li>数据隐私性：内容经过对称加密，每个连接生成一个唯一的加密密钥</li>
  <li>数据完整性：内容传输经过完整性校验</li>
  <li>身份认证：第三方无法伪造服务端（客户端）身份</li>
</ul>

<h3 id="三https如何解决http上述问题">三、HTTPS如何解决HTTP上述问题?</h3>

<p>HTTPS并非是应用层的一种新协议。只是HTTP通信接口部分用SSL（Secure Socket Layer）和TLS（Transport Layer Security）协议代替而已。</p>

<p>通常，HTTP直接和TCP通信。当使用SSL时，则演变成先和SSL通信，再由SSL和TCP通信了。简言之，<strong>所谓HTTPS，其实就是身披SSL协议这层外壳的HTTP</strong>。</p>

<p><a href="https://image.fundebug.com/2019-0424-0002.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57872f0b756a5?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<p>在采用SSL后，HTTP就拥有了HTTPS的加密、证书和完整性保护这些功能。也就是说<strong>HTTP加上加密处理和认证以及完整性保护后即是HTTPS</strong>。</p>

<p><a href="https://image.fundebug.com/2019-0424-0003.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57872ed2087e6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<p>HTTPS 协议的主要功能基本都依赖于 TLS/SSL 协议，TLS/SSL 的功能实现主要依赖于三类基本算法：散列函数 、对称加密和非对称加密，<strong>其利用非对称加密实现身份认证和密钥协商，对称加密算法采用协商的密钥对数据加密，基于散列函数验证信息的完整性</strong>。</p>

<p><a href="https://image.fundebug.com/2019-0424-0004.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57872f1d3315e?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<h3 id="一解决内容可能被窃听的问题加密">（一）解决内容可能被窃听的问题——加密</h3>

<h4 id="方法1-对称加密">方法1. 对称加密</h4>

<p>这种方式加密和解密同用一个密钥。加密和解密都会用到密钥。<strong>没有密钥就无法对密码解密，反过来说，任何人只要持有密钥就能解密了</strong>。</p>

<p>以对称加密方式加密时必须将密钥也发给对方。可究竟怎样才能安全地转交？在互联网上转发密钥时，如果通信被监听那么密钥就可会落人攻击者之手，同时也就失去了加密的意义。另外还得设法安全地保管接收到的密钥。</p>

<h4 id="方法2-非对称加密">方法2. 非对称加密</h4>

<p>公开密钥加密使用一对非对称的密钥。一把叫做私有密钥，另一把叫做公开密钥。顾名思义，<strong>私有密钥不能让其他任何人知道，而公开密钥则可以随意发布，任何人都可以获得</strong>。</p>

<p>使用公开密钥加密方式，发送密文的一方使用<strong>对方的公开密钥</strong>进行加密处理，对方收到被加密的信息后，再使用自己的私有密钥进行解密。利用这种方式，不需要发送用来解密的私有密钥，也不必担心密钥被攻击者窃听而盗走。</p>

<p><a href="https://image.fundebug.com/2019-0424-0005.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a578733af488ab?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<p>非对称加密的特点是信息传输一对多，服务器只需要维持一个私钥就能够和多个客户端进行加密通信。</p>

<p>这种方式有以下缺点：</p>

<ul>
  <li>公钥是公开的，所以针对私钥加密的信息，黑客截获后可以使用公钥进行解密，获取其中的内容；</li>
  <li>公钥并不包含服务器的信息，使用非对称加密算法无法确保服务器身份的合法性，存在中间人攻击的风险，服务器发送给客户端的公钥可能在传送过程中被中间人截获并篡改；</li>
  <li>使用非对称加密<strong>在数据加密解密过程需要消耗一定时间</strong>，降低了数据传输效率；</li>
</ul>

<h4 id="方法3-对称加密非对称加密https采用这种方式">方法3. 对称加密+非对称加密(HTTPS采用这种方式)</h4>

<p>使用对称密钥的好处是解密的效率比较快，使用非对称密钥的好处是可以使得传输的内容不能被破解，因为就算你拦截到了数据，但是没有对应的私钥，也是不能破解内容的。就比如说你抢到了一个保险柜，但是没有保险柜的钥匙也不能打开保险柜。那我们就将对称加密与非对称加密结合起来，充分利用两者各自的优势，<strong>在交换密钥环节使用非对称加密方式，之后的建立通信交换报文阶段则使用对称加密方式</strong>。</p>

<p>具体做法是：<strong>发送密文的一方使用对方的公钥进行加密处理“对称的密钥”，然后对方用自己的私钥解密拿到“对称的密钥”，这样可以确保交换的密钥是安全的前提下，使用对称加密方式进行通信</strong>。所以，HTTPS采用对称加密和非对称加密两者并用的混合加密机制。</p>

<h3 id="二解决报文可能遭篡改问题数字签名">（二）解决报文可能遭篡改问题——数字签名</h3>

<p>网络传输过程中需要经过很多中间节点，虽然数据无法被解密，但可能被篡改，那如何校验数据的完整性呢？—-校验数字签名。</p>

<p><strong>数字签名有两种功效</strong>：</p>

<ul>
  <li>能确定消息确实是由发送方签名并发出来的，因为别人假冒不了发送方的签名。</li>
  <li>数字签名能确定消息的完整性，证明数据是否未被篡改过。</li>
</ul>

<p><strong>数字签名如何生成:</strong></p>

<p><a href="https://image.fundebug.com/2019-0424-0006.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57873417bdb4b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<p>将一段文本先用Hash函数生成消息摘要，然后用发送者的私钥加密生成数字签名，与原文文一起传送给接收者。接下来就是接收者校验数字签名的流程了。</p>

<p><strong>校验数字签名流程</strong>：</p>

<p><a href="https://image.fundebug.com/2019-0424-0007.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57873654ca2d3?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<p>接收者只有用发送者的公钥才能解密被加密的摘要信息，然后用HASH函数对收到的原文产生一个摘要信息，与上一步得到的摘要信息对比。如果相同，则说明收到的信息是完整的，在传输过程中没有被修改，否则说明信息被修改过，因此数字签名能够验证信息的完整性。</p>

<p>假设消息传递在Kobe，James两人之间发生。James将消息连同数字签名一起发送给Kobe，Kobe接收到消息后，通过校验数字签名，就可以验证接收到的消息就是James发送的。当然，这个过程的前提是Kobe知道James的公钥。问题的关键的是，和消息本身一样，公钥不能在不安全的网络中直接发送给Kobe，或者说拿到的公钥如何证明是James的。</p>

<p>此时就需要引入了<strong>证书颁发机构</strong>（Certificate Authority，简称CA），CA数量并不多，Kobe客户端内置了所有受信任CA的证书。CA对James的公钥（和其他信息）数字签名后生成证书。</p>

<p>###（三）解决通信方身份可能被伪装的问题——数字证书</p>

<p>数字证书认证机构处于客户端与服务器双方都可信赖的第三方机构的立场上。我们来介绍一下数字证书认证机构的业务流程。</p>

<p><a href="https://image.fundebug.com/2019-0424-0008.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a5787379523a6f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<ul>
  <li>服务器的运营人员向数字证书认证机构提出公开密钥的申请</li>
  <li>数字证书认证机构在判明提出申请者的身份之后，会对已申请的公开密钥做数字签名</li>
  <li>然后分配这个已签名的公开密钥，并将该公开密钥放入公钥证书后绑定在一起</li>
  <li>服务器会将这份由数字证书认证机构颁发的公钥证书发送给客户端，以进行非对称加密方式通信。公钥证书也可叫做数字证书或直接称为证书。</li>
</ul>

<p>接到证书的客户端可使用数字证书认证机构的公开密钥，对那张证书上的数字签名进行验证，一旦验证通过，客户端便可明确两件事：</p>

<p>一、认证服务器的公开密钥的是真实有效的数字证书认证机构。</p>

<p>二、服务器的公开密钥是值得信赖的。</p>

<h3 id="四-https工作流程">四、 HTTPS工作流程</h3>

<p><a href="https://image.fundebug.com/2019-0424-0009.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a5787388fbf78a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="img" /></a></p>

<p>1.Client发起一个HTTPS（比如<code class="language-plaintext highlighter-rouge">https://juejin.im/user/4283353031252967</code>）的请求，根据RFC2818的规定，Client知道需要连接Server的443（默认）端口。</p>

<p>2.Server把事先配置好的公钥证书（public key certificate）返回给客户端。</p>

<p>3.Client验证公钥证书：比如是否在有效期内，证书的用途是不是匹配Client请求的站点，是不是在CRL吊销列表里面，它的上一级证书是否有效，这是一个递归的过程，直到验证到根证书（操作系统内置的Root证书或者Client内置的Root证书）。如果验证通过则继续，不通过则显示警告信息。</p>

<p>4.Client使用伪随机数生成器生成加密所使用的对称密钥，然后用证书的公钥加密这个对称密钥，发给Server。</p>

<p>5.Server使用自己的私钥（private key）解密这个消息，得到对称密钥。至此，Client和Server双方都持有了相同的对称密钥。</p>

<p>6.Server使用对称密钥加密“明文内容A”，发送给Client。</p>

<p>7.Client使用对称密钥解密响应的密文，得到“明文内容A”。</p>

<p>8.Client再次发起HTTPS的请求，使用对称密钥加密请求的“明文内容B”，然后Server使用对称密钥解密密文，得到“明文内容B”。</p>

<h3 id="五http-与-https-的区别">五、HTTP 与 HTTPS 的区别</h3>

<ul>
  <li>HTTP 是明文传输协议，HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全。</li>
</ul>

<p><a href="https://image.fundebug.com/2019-0424-00010.png"><img src="https://user-gold-cdn.xitu.io/2019/4/26/16a57873acced7f1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt="2019-0424-00010" /></a>2019-0424-00010</p>

<p>关于安全性，用最简单的比喻形容两者的关系就是卡车运货，HTTP下的运货车是敞篷的，货物都是暴露的。而https则是封闭集装箱车，安全性自然提升不少。</p>

<ul>
  <li>HTTPS比HTTP更加安全，对搜索引擎更友好，利于SEO，谷歌、百度优先索引HTTPS网页;</li>
  <li>HTTPS需要用到SSL证书，而HTTP不用;</li>
  <li>HTTPS标准端口443，HTTP标准端口80;</li>
  <li>HTTPS基于传输层，HTTP基于应用层;</li>
  <li>HTTPS在浏览器显示绿色安全锁，HTTP没有显示;</li>
</ul>

<h3 id="六为何不所有的网站都使用https">六、为何不所有的网站都使用HTTPS</h3>

<p>既然HTTPS那么安全可靠，那为何不所有的Web网站都使用HTTPS？</p>

<p>首先，很多人还是会觉得HTTPS实施有门槛，这个门槛在于需要权威CA颁发的SSL证书。从证书的选择、购买到部署，传统的模式下都会比较耗时耗力。</p>

<p>其次，HTTPS普遍认为性能消耗要大于HTTP，因为<strong>与纯文本通信相比，加密通信会消耗更多的CPU及内存资源</strong>。如果每次通信都加密，会消耗相当多的资源，平摊到一台计算机上时，能够处理的请求数量必定也会随之减少。但事实并非如此，用户可以通过性能优化、把证书部署在SLB或CDN，来解决此问题。举个实际的例子，“双十一”期间，全站HTTPS的淘宝、天猫依然保证了网站和移动端的访问、浏览、交易等操作的顺畅、平滑。通过测试发现，经过优化后的许多页面性能与HTTP持平甚至还有小幅提升，因此HTTPS经过优化之后其实并不慢。</p>

<p>除此之外，<strong>想要节约购买证书的开销也是原因之一</strong>。要进行HTTPS通信，证书是必不可少的。而使用的证书必须向认证机构（CA）购买。</p>

<p>最后是安全意识。相比国内，国外互联网行业的安全意识和技术应用相对成熟，HTTPS部署趋势是由社会、企业、政府共同去推动的。</p>

<h3 id="参考文章与书籍">参考文章与书籍</h3>

<ul>
  <li><a href="https://book.douban.com/subject/25863515/">图解HTTP</a></li>
  <li><a href="http://www.zhufengpeixun.cn/main/course/index.html">珠峰架构课(推荐)</a></li>
  <li><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html">数字签名是什么？(推荐)</a></li>
  <li><a href="https://cattail.me/tech/2015/11/30/how-https-works.html">HTTPS工作原理</a></li>
  <li><a href="http://liuduo.me/2018/05/14/https-detail/">HTTPS 原理详解</a></li>
  <li><a href="http://www.wxtlife.com/2016/03/27/详解https是如何确保安全的？/">详解HTTPS是如何确保安全性的？</a></li>
  <li>[<a href="https://www.cnblogs.com/linianhui/p/security-https-workflow.html">信息安全] 3.HTTPS工作流程</a></li>
  <li><a href="https://www.wosign.com/info/https_vs_http.htm">为什么HTTPS比HTTP更安全</a></li>
</ul>
:ET