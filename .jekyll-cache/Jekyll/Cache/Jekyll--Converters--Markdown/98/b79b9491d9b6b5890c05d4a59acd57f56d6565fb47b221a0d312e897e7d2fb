I"<h1 id="剑指-offer-21-调整数组顺序使奇数位于偶数前面"><a href="https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/">剑指 Offer 21. 调整数组顺序使奇数位于偶数前面</a></h1>

<p>tag: easy，数组，双指针</p>

<p><strong>题目：</strong></p>

<p>输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。</p>

<p><strong>示例 1：</strong></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>输入：nums = [1,2,3,4]
输出：[1,3,2,4] 
注：[3,1,2,4] 也是正确的答案之一。
</code></pre></div></div>

<h1 id="方法一">方法一：</h1>

<ul>
  <li>解题思路：</li>
</ul>

<p>考虑定义双指针 i , j 分列数组左右两端，循环执行：</p>

<ol>
  <li>指针 i 从左向右寻找偶数；</li>
  <li>指针 jj 从右向左寻找奇数；</li>
  <li>将 偶数 nums[i] 和 奇数 nums[j] 交换。</li>
</ol>

<p>可始终保证： 指针 i 左边都是奇数，指针 j 右边都是偶数 。</p>

<ul>
  <li>
    <p>算法流程：</p>
  </li>
  <li>初始化： i , j 双指针，分别指向数组 nums 左右两端；</li>
  <li>循环交换： 当 i = j时跳出；
    <ul>
      <li>指针 i 遇到奇数则执行 i=i+1 跳过，直到找到偶数；</li>
      <li>指针 jj 遇到偶数则执行 j=j−1 跳过，直到找到奇数；</li>
      <li>交换 nums[i] 和 nums[j] 值；</li>
    </ul>
  </li>
  <li>
    <p>返回值： 返回已修改的 numsnums 数组。</p>
  </li>
  <li>复杂度分析：
    <ul>
      <li>时间复杂度 O(N) ： N 为数组 nums 长度，双指针 i, j 共同遍历整个数组。</li>
      <li>空间复杂度 O(1) ： 双指针 i, j 使用常数大小的额外空间。</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">exchange</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">nums</span><span class="p">):</span>
        <span class="n">i</span><span class="p">,</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">nums</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
        <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">j</span><span class="p">:</span>
            <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">j</span> <span class="ow">and</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&amp;</span> <span class="mi">1</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">j</span> <span class="ow">and</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">&amp;</span> <span class="mi">1</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">j</span> <span class="o">-=</span> <span class="mi">1</span>
            <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">nums</span><span class="p">[</span><span class="n">j</span><span class="p">],</span> <span class="n">nums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">nums</span>
</code></pre></div></div>

<blockquote>
  <p>执行用时：60 ms, 在所有 Python3 提交中击败了66.40%的用户</p>

  <p>内存消耗：17.7 MB, 在所有 Python3 提交中击败了99.18%的用户</p>
</blockquote>

<p><a href="https://leetcode-cn.com/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/solution/mian-shi-ti-21-diao-zheng-shu-zu-shun-xu-shi-qi-4/">Link</a></p>
:ET